
==================== FINAL INTERFACE ====================
2016-12-24 10:32:22.62832 UTC

interface main@main:DB [family instance module] 8001
  interface hash: 8f4d565f2c6d8091068d70a66d12ee9c
  ABI hash: 76e8d744869b07e8e26bf32e45f4aeee
  export-list hash: 9b7dfb3eb7cd52fc3c95e8ff7c56f31e
  orphan hash: b345c8a36b0706195838c9227ee5f301
  flag hash: 56a8a8e9f078530d84410a7ca544568d
  sig of: Nothing
  used TH splices: True
  where
exports:
  DB.doMigration
  DB.insertNP
  DB.selectAllNP
  DB.selectNP
  DB.NumberPlace{DB.NumberPlace numberPlaceBoard numberPlaceBoards}
module dependencies:
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl
                      aeson-compat-0.3.6@aeson-compat-0.3.6-E41ehkTzXoOGdiPpKt9DSo
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.0.2@attoparsec-0.13.0.2-GLM6q4XQBSiI4fJOXoBxlu
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-5dPoF8dzhwzBaEB2MvnmIS
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D
                      blaze-textual-0.2.1.0@blaze-textual-0.2.1.0-5TvXaG25I6S46sBk67LFXf
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      conduit-1.2.7@conduit-1.2.7-AT81Epeipx6C4wqHn3FXor
                      conduit-extra-1.1.13.2@conduit-extra-1.1.13.2-HFYphC0EojhHqAnIEx6Pp5
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-bAUkz2rC2kFhBbPjw2Of5
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      fast-logger-2.4.6@fast-logger-2.4.6-HRSjyxgqsD189veq1dYWk7
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      http-api-data-0.2.4@http-api-data-0.2.4-3jwS7OrPl3l4oJfG3gRZ5C
                      integer-gmp-1.0.0.1
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      mmorph-1.0.6@mmorph-1.0.6-3xsw6wg6Vs2JmwrJVsaYA0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      monad-logger-0.3.19@monad-logger-0.3.19-3KRgH6CniDbKll7yTf1WEI
                      monad-loops-0.4.3@monad-loops-0.4.3-1xZFtRVMQPC4X8bjTBWqNi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      mysql-0.1.4@mysql-0.1.4-DimPIfooGGHJabUPWkGGxx
                      mysql-simple-0.4.0.0@mysql-simple-0.4.0.0-F3ihRMN9bUm2a7nW34P6dx
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      path-pieces-0.2.1@path-pieces-0.2.1-EQ6YdjSujhVE8ECatsqK1q
                      pcre-light-0.4.0.4@pcre-light-0.4.0.4-IQAaYrFkWFB49U9V8o5b8j
                      persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ
                      persistent-mysql-2.6@persistent-mysql-2.6-D4rn3O1h40BIaXYsqp0jgs
                      persistent-template-2.5.1.6@persistent-template-2.5.1.6-8iRn3xUlWkU9lhfp8lf0UX
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-9vTgJsy3ECMB5KkdzRIRAh
                      resourcet-1.1.7.5@resourcet-1.1.7.5-Gsc14LtMBpp2sQtbjwGHLc
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      silently-1.2.5@silently-1.2.5-Ek776fxSdtm4h8aXqt6CNw
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-4lLWE8CZnvmDZJW5bKkus1
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl:Data.Aeson.Types.Instances
         attoparsec-0.13.0.2@attoparsec-0.13.0.2-GLM6q4XQBSiI4fJOXoBxlu:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.2@attoparsec-0.13.0.2-GLM6q4XQBSiI4fJOXoBxlu:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.1.6@persistent-template-2.5.1.6-8iRn3xUlWkU9lhfp8lf0UX:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.2@attoparsec-0.13.0.2-GLM6q4XQBSiI4fJOXoBxlu:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         monad-logger-0.3.19@monad-logger-0.3.19-3KRgH6CniDbKll7yTf1WEI:Control.Monad.Logger
                         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Class.PersistConfig
                         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Types.Internal
                         persistent-mysql-2.6@persistent-mysql-2.6-D4rn3O1h40BIaXYsqp0jgs:Database.Persist.MySQL
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.7.5@resourcet-1.1.7.5-Gsc14LtMBpp2sQtbjwGHLc:Control.Monad.Trans.Resource.Internal
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl:Data.Aeson 781ef1374a011db45a9223627124412d
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl:Data.Aeson.Types.Class 28d9addb1937c6a5858f314411f8fe73
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl:Data.Aeson.Types.Instances c359307914b230096f9f40a2ee204013
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl:Data.Aeson.Types.Internal 06f65c172d574ed89d1f8dbf98510476
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.Proxy aa86c72628cf3b1ceb0816ca84687d80
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.0.0:GHC.Generics 8e2a7658e8b966c1d29d0d5fd4129f38
import  -/  base-4.9.0.0:GHC.Int 2421020ac5d687542a6612a08a16b1fd
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Read 817c914615ac8e308afc0c675fb3f671
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:Text.ParserCombinators.ReadPrec 9512e2f4b227f507f87a150887202aed
import  -/  base-4.9.0.0:Text.Read.Lex fe3dd7b823826bf6870140c5363f9596
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal 96a214b84fd13ce168aecf88c70c8f1b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8d095ad71634b5551ba5dc1307b7f9e5
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  http-api-data-0.2.4@http-api-data-0.2.4-3jwS7OrPl3l4oJfG3gRZ5C:Web.HttpApiData.Internal 5e05840a26e3e4a6a82ac5352d50abe8
import  -/  monad-logger-0.3.19@monad-logger-0.3.19-3KRgH6CniDbKll7yTf1WEI:Control.Monad.Logger 0c9b016dbb168868a92b7b2fbcc6efe8
import  -/  mysql-0.1.4@mysql-0.1.4-DimPIfooGGHJabUPWkGGxx:Database.MySQL.Base 8cd78238d69965e7bbe07a4ea7266815
import  -/  path-pieces-0.2.1@path-pieces-0.2.1-EQ6YdjSujhVE8ECatsqK1q:Web.PathPieces 30e3f3047e2c5650764b43dd339b1722
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist b67b1fa9c1fb42475cc2088d63143c2e
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Class.PersistEntity 5c0fbae33532d24450df75eac2a6c077
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Class.PersistField a1243ac2b45bd8010096db74df56d867
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Class.PersistQuery 665c30798c5a6a81435a5be3f024b9f4
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Class.PersistStore 934fb8acb8096abcbf840b4bac7c07c4
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql a0d7dfe073d43575d4eee6592decd5e0
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Class a9d8661d20f6f2f809d09684e18da17f
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Migration c21c8853ed77c4805877f9ffb1bb29bd
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Run 176e8627c97b94a8bdc197495868040a
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Types eeff89652a97754ba898c998cbe03c59
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Types.Internal 12d8778ead051a5242f46f0919bdd49f
import  -/  persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Types.Base a5bd8c1e9a00e8c44532617262288ed4
import  -/  persistent-mysql-2.6@persistent-mysql-2.6-D4rn3O1h40BIaXYsqp0jgs:Database.Persist.MySQL 62d9462483d813374af192f549989264
import  -/  persistent-template-2.5.1.6@persistent-template-2.5.1.6-8iRn3xUlWkU9lhfp8lf0UX:Database.Persist.TH ee1a9117eacd972cc73db69ae1aa813e
import  -/  resourcet-1.1.7.5@resourcet-1.1.7.5-Gsc14LtMBpp2sQtbjwGHLc:Control.Monad.Trans.Resource a315c343b049ae48d4659d49fa114d63
import  -/  resourcet-1.1.7.5@resourcet-1.1.7.5-Gsc14LtMBpp2sQtbjwGHLc:Control.Monad.Trans.Resource.Internal 8ec6299a68ab203699133ac4fd60f539
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 00261e8e5b51b919ebe8da24b37dfdbd
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Internal 530216acfbfab25df053b0caac6d6a57
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Reader e4096b104cf1a0df8752e81669ef6a24
import  -/  unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base 5eddd47f78c7f92d8ccf632680ed9618
import  -/  unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Strict a02e9d1868a607a28ba5e020d8376da1
226a992b37a5cd3dd3fbc0a697d4139d
  $fEqKey ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fEqKey_$c==
                  DB.$fEqKey_$c/= -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fEqKey_$c/= ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.neInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fEqKey_$c== ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.eqInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fEqNumberPlace :: GHC.Classes.Eq DB.NumberPlace
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DB.NumberPlace DB.$fEqNumberPlace_$c== DB.$fEqNumberPlace_$c/= -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fEqNumberPlace_$c/= ::
    DB.NumberPlace -> DB.NumberPlace -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: DB.NumberPlace) (b :: DB.NumberPlace) ->
                 case DB.$fEqNumberPlace_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fEqNumberPlace_$c== ::
    DB.NumberPlace -> DB.NumberPlace -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U,U)><S(SS),1*U(U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DB.NumberPlace) (w1 :: DB.NumberPlace) ->
                 case w of ww { DB.NumberPlace ww1 ww2 ->
                 case w1 of ww3 { DB.NumberPlace ww4 ww5 ->
                 case GHC.Classes.$fEq[]_$c==
                        @ [GHC.Types.Int]
                        GHC.Classes.$fEq[]_$s$fEq[]
                        ww1
                        ww4 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> GHC.Classes.$fEq[]_$c==
                        @ [[GHC.Types.Int]]
                        DB.$fEqNumberPlace_$s$fEq[]
                        ww2
                        ww5 } } }) -}
07057df9f2783eabffa11a47600a7717
  $fEqNumberPlace_$s$fEq[] :: GHC.Classes.Eq [[GHC.Types.Int]]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [[GHC.Types.Int]]
                  (GHC.Classes.$fEq[]_$c==
                     @ [GHC.Types.Int]
                     GHC.Classes.$fEq[]_$s$fEq[])
                  DB.$fEqNumberPlace_$s$fEq[]_$c/= -}
ecd6d653832e6afae98d17d8e0cada05
  $fEqNumberPlace_$s$fEq[]_$c/= ::
    [[GHC.Types.Int]] -> [[GHC.Types.Int]] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [[GHC.Types.Int]]) (y :: [[GHC.Types.Int]]) ->
                 GHC.Classes.not
                   (GHC.Classes.$fEq[]_$c==
                      @ [GHC.Types.Int]
                      GHC.Classes.$fEq[]_$s$fEq[]
                      x
                      y)) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fFromHttpApiDataKey ::
    Web.HttpApiData.Internal.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fFromHttpApiDataKey_$cparseUrlPiece
                  DB.$fFromHttpApiDataKey_$cparseHeader
                  DB.$fFromHttpApiDataKey_$cparseUrlPiece -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fFromHttpApiDataKey_$cparseHeader ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseHeader
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (DB.N:R:KeyNumberPlace[0]))
                                        (Sym (DB.D:R:KeyNumberPlace0[0]))))))_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fFromHttpApiDataKey_$cparseUrlPiece ::
    Data.Text.Internal.Text
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseUrlPiece
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (DB.N:R:KeyNumberPlace[0]))
                                        (Sym (DB.D:R:KeyNumberPlace0[0]))))))_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fFromJSONEntity ::
    Data.Aeson.Types.Class.FromJSON
      (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DB.$fFromJSONEntity_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <Database.Persist.Class.PersistEntity.Entity DB.NumberPlace>_N)) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fFromJSONEntity_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Database.Persist.Class.PersistEntity.$wentityIdFromJSON
                   @ DB.NumberPlace
                   DB.$fPersistEntityNumberPlace
                   DB.$fFromJSONEntity_$cparseJSON1
                     `cast`
                   (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <DB.NumberPlace>_N))
                   w3) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fFromJSONEntity_$cparseJSON1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DB.NumberPlace
  {- Arity: 1, Strictness: <S,1*U> -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fFromJSONKey ::
    Data.Aeson.Types.Class.FromJSON
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- Arity: 1, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DB.$fPersistEntityNumberPlace_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_N)) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fFromJSONNumberPlace ::
    Data.Aeson.Types.Class.FromJSON DB.NumberPlace
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                DB.$fFromJSONEntity_$cparseJSON1
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0] <DB.NumberPlace>_N)) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fGenericNumberPlace :: GHC.Generics.Generic DB.NumberPlace
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DB.NumberPlace
                  DB.$fGenericNumberPlace_$cfrom
                  DB.$fGenericNumberPlace_$cto -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fGenericNumberPlace_$cfrom ::
    DB.NumberPlace -> GHC.Generics.Rep DB.NumberPlace x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: DB.NumberPlace) ->
                 case ds of wild { DB.NumberPlace g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "numberPlaceBoard")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.SourceStrict
                            'GHC.Generics.DecidedStrict)
                         (GHC.Generics.K1 GHC.Generics.R DB.Board))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "numberPlaceBoards")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.SourceStrict
                            'GHC.Generics.DecidedStrict)
                         (GHC.Generics.K1 GHC.Generics.R DB.Boards))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <DB.Board>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "numberPlaceBoard")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedStrict>_P
                                   <GHC.Generics.K1 GHC.Generics.R DB.Board>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <DB.Boards>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "numberPlaceBoards")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedStrict>_P
                                   <GHC.Generics.K1 GHC.Generics.R DB.Boards>_R) <x>_N)))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:M1[0]
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "NumberPlace" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "numberPlaceBoard")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedStrict)
                                   (GHC.Generics.K1 GHC.Generics.R DB.Board)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "numberPlaceBoards")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.SourceStrict
                                                       'GHC.Generics.DecidedStrict)
                                                    (GHC.Generics.K1 GHC.Generics.R DB.Boards)>_R))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "NumberPlace" "DB" "main" 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "NumberPlace" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "numberPlaceBoard")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedStrict)
                                           (GHC.Generics.K1 GHC.Generics.R DB.Board)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "numberPlaceBoards")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.SourceStrict
                                                               'GHC.Generics.DecidedStrict)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R DB.Boards))>_R))
                           (Sub (Sym (DB.Rep_NumberPlace[0])))) <x>_N) }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fGenericNumberPlace_$cto ::
    GHC.Generics.Rep DB.NumberPlace x -> DB.NumberPlace
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DB.NumberPlace x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DB.Rep_NumberPlace[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "NumberPlace" "DB" "main" 'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "NumberPlace" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "numberPlaceBoard")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.SourceStrict
                                              'GHC.Generics.DecidedStrict)
                                           (GHC.Generics.K1 GHC.Generics.R DB.Board)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "numberPlaceBoards")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.SourceStrict
                                                               'GHC.Generics.DecidedStrict)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R DB.Boards))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "NumberPlace" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "numberPlaceBoard")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.SourceStrict
                                           'GHC.Generics.DecidedStrict)
                                        (GHC.Generics.K1 GHC.Generics.R DB.Board)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "numberPlaceBoards")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.SourceStrict
                                                            'GHC.Generics.DecidedStrict)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            DB.Boards)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 DB.$WNumberPlace
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "numberPlaceBoard")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.SourceStrict
                                'GHC.Generics.DecidedStrict>_P
                             <GHC.Generics.K1 GHC.Generics.R DB.Board>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <DB.Board>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "numberPlaceBoards")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.SourceStrict
                                'GHC.Generics.DecidedStrict>_P
                             <GHC.Generics.K1 GHC.Generics.R DB.Boards>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <DB.Boards>_R <x>_P)) }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fOrdKey ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fEqKey
                  DB.$fOrdKey_$ccompare
                  DB.$fOrdKey_$c<
                  DB.$fOrdKey_$c<=
                  DB.$fOrdKey_$c>
                  DB.$fOrdKey_$c>=
                  DB.$fOrdKey_$cmax
                  DB.$fOrdKey_$cmin -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fOrdKey_$c< ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.ltInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fOrdKey_$c<= ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.leInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fOrdKey_$c> ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.gtInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fOrdKey_$c>= ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.geInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fOrdKey_$ccompare ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$ccompare
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <GHC.Types.Ordering>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fOrdKey_$cmax ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmax
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fOrdKey_$cmin ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmin
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (DB.N:R:KeyNumberPlace[0]))
                                    (Sym (DB.D:R:KeyNumberPlace0[0]))))) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPathPieceKey ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fPathPieceKey_$cfromPathPiece
                  DB.$fPathPieceKey_$ctoPathPiece -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPathPieceKey_$cfromPathPiece ::
    Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (GHC.Base.Maybe
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (DB.N:R:KeyNumberPlace[0]))
                                        (Sym (DB.D:R:KeyNumberPlace0[0]))))))_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPathPieceKey_$ctoPathPiece ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace ::
    Database.Persist.Class.PersistEntity.PersistEntity DB.NumberPlace
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DB.NumberPlace
                  DB.$fPersistFieldKey
                  DB.$fToJSONKey
                  DB.$fPersistEntityNumberPlace_$cparseJSON
                    `cast`
                  (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                            <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_N))
                  DB.$fShowKey
                  DB.$fReadKey
                  DB.$fEqKey
                  DB.$fOrdKey
                  DB.$fPersistEntityNumberPlace_$ckeyToValues
                  DB.$fPersistEntityNumberPlace_$ckeyFromValues
                  DB.$fPersistEntityNumberPlace_$s$WNumberPlaceId
                  DB.$fPersistEntityNumberPlace_$centityDef
                  DB.$fPersistEntityNumberPlace_$cpersistFieldDef
                  DB.$fPersistEntityNumberPlace_$ctoPersistFields
                  DB.$fPersistEntityNumberPlace_$cfromPersistValues
                  DB.$fPersistEntityNumberPlace_$cpersistUniqueKeys
                  DB.$fPersistEntityNumberPlace_$cpersistUniqueToFieldNames
                  DB.$fPersistEntityNumberPlace_$cpersistUniqueToValues
                  DB.$fPersistEntityNumberPlace_$cfieldLens -}
5a341b8f1a8d371245ada066f9505d80
  $fPersistEntityNumberPlace1 ::
    [Database.Persist.Types.Base.PersistValue]
  {- Strictness: x -}
5bf423893bcfe8ca6cddff975b28e784
  $fPersistEntityNumberPlace10 ::
    Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   DB.$fPersistEntityNumberPlace11) -}
c7fb637a934bcdd292ff25d15bde59fa
  $fPersistEntityNumberPlace11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Board"#) -}
b9b6fd2d8a3cb338088a7c53125eded1
  $fPersistEntityNumberPlace12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "board"#) -}
ad4b923d33cc0cadd54317f4f3421aa7
  $fPersistEntityNumberPlace13 ::
    Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Id"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "NumberPlace"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   DB.$fPersistEntityNumberPlace18
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      DB.$fPersistEntityNumberPlace14) } } }) -}
7b38e3a52bfd2dfca8070f87ec654576
  $fPersistEntityNumberPlace14 ::
    Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   DB.$fPersistEntityNumberPlace16
                   DB.$fPersistEntityNumberPlace15) -}
186b398e89cd6ac88f2a97956328d533
  $fPersistEntityNumberPlace15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Int64"#) -}
0a5c6a0aad70ea7f901f3a6b3f2535c2
  $fPersistEntityNumberPlace16 ::
    GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   DB.$fPersistEntityNumberPlace17) -}
3f9da5d2fbe85d55fa459fd66a36da4b
  $fPersistEntityNumberPlace17 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Data.Int"#) -}
7b057ddd2b7a573ec3cb2cb983b7f856
  $fPersistEntityNumberPlace18 ::
    Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   DB.$fPersistEntityNumberPlace19) -}
797e4f926a27f35656504834417e6f0c
  $fPersistEntityNumberPlace19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "NumberPlaceId"#) -}
24739aad8c99ae38026afdb9f00ccb4f
  $fPersistEntityNumberPlace2 ::
    [(Database.Persist.Types.Base.HaskellName,
      Database.Persist.Types.Base.DBName)]
  {- Strictness: x -}
e1a7fc7e1bfeec862079df343b95a87f
  $fPersistEntityNumberPlace20 ::
    Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "NumberPlace"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "Id"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case DB.$fPersistEntityNumberPlace_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      DB.$fPersistEntityNumberPlace18
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         DB.$fPersistEntityNumberPlace14))
                   DB.$fPersistEntityNumberPlace29
                   DB.$fPersistEntityNumberPlace27
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   DB.$fPersistEntityNumberPlace21
                   dt
                   GHC.Types.False } } } }) -}
a61886d4fe58591b6874171e3ae72605
  $fPersistEntityNumberPlace21 :: [Data.Text.Internal.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   DB.$fPersistEntityNumberPlace26
                   DB.$fPersistEntityNumberPlace22) -}
2470bca1ba029e02ca44faeee462a763
  $fPersistEntityNumberPlace22 :: [Data.Text.Internal.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   DB.$fPersistEntityNumberPlace25
                   DB.$fPersistEntityNumberPlace23) -}
f1f8cdde869efc4d2862c76e570e8e28
  $fPersistEntityNumberPlace23 :: [Data.Text.Internal.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   DB.$fPersistEntityNumberPlace24
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
3abbf785f7a01df407df33721a1cb7dd
  $fPersistEntityNumberPlace24 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Generic"#) -}
fcddf326361b3456a44ca6809169df1f
  $fPersistEntityNumberPlace25 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Show"#) -}
33d4a7bd0ab95583fd033e909dcbc3c3
  $fPersistEntityNumberPlace26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Eq"#) -}
a2292b90c6de7fa76cb2649a0e42c4bb
  $fPersistEntityNumberPlace27 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   DB.$fPersistEntityNumberPlace9
                   DB.$fPersistEntityNumberPlace28) -}
0f608e634791088b7eb576dd627b98d8
  $fPersistEntityNumberPlace28 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   DB.$fPersistEntityNumberPlace5
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
f34cdc31ce280c4eb66036866053d54a
  $fPersistEntityNumberPlace29 :: [Database.Persist.Types.Base.Attr]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.Attr
                   DB.$fPersistEntityNumberPlace30
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)) -}
830ad1642a247b85d6915682c0fb14fe
  $fPersistEntityNumberPlace3 ::
    Database.Persist.Class.PersistField.PersistField DB.Board
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$fPersistEntityNumberPlace_$s$fPersistField[]1 -}
c5e0271eabe0241a6e17e6879ccaef9f
  $fPersistEntityNumberPlace30 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "json"#) -}
666ee33966972fee337db35b3d214f4e
  $fPersistEntityNumberPlace31 ::
    Data.Map.Base.Map Data.Text.Internal.Text a1
    -> [(Data.Text.Internal.Text, a1)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace32 ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                           DB.NumberPlace
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$fPersistEntityNumberPlace33
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) <Database.Persist.Class.PersistEntity.Key
                                    DB.NumberPlace>_N <Database.Persist.Class.PersistEntity.Key
                                                         DB.NumberPlace>_N) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace33 ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key
                   DB.NumberPlace
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   @~ <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_N) -}
ab44794389c8cc29bf7051de99e64059
  $fPersistEntityNumberPlace4 ::
    Database.Persist.Class.PersistField.PersistField [GHC.Types.Int]
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$fPersistEntityNumberPlace_$s$fPersistField[]2 -}
31abe5a17a989d61ce814b9cd323e57c
  $fPersistEntityNumberPlace5 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case DB.$fPersistEntityNumberPlace8 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   DB.$fPersistEntityNumberPlace6
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
f7f2a2db0da8951ef6d8fd14798644cb
  $fPersistEntityNumberPlace6 ::
    Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   DB.$fPersistEntityNumberPlace7) -}
17420e917fbe392755745305f4f831ca
  $fPersistEntityNumberPlace7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Boards"#) -}
e9f6fc9c188212603ba7c3823d4e1116
  $fPersistEntityNumberPlace8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "boards"#) -}
3ef5aa1659e5b6e2a1ea3507d3c9c0e8
  $fPersistEntityNumberPlace9 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case DB.$fPersistEntityNumberPlace12 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   DB.$fPersistEntityNumberPlace10
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$centityDef ::
    GHC.Base.Monad m =>
    m DB.NumberPlace -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m DB.NumberPlace) ->
                 DB.$fPersistEntityNumberPlace20) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      DB.NumberPlace field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity DB.NumberPlace
       -> f (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U(U,U))>,
     Unfolding: (\ @ field
                   (dk :: Database.Persist.Class.PersistEntity.EntityField
                            DB.NumberPlace field)
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (eta :: field -> f field)
                   (eta1 :: Database.Persist.Class.PersistEntity.Entity
                              DB.NumberPlace) ->
                 case dk
                        `cast`
                      (DB.D:R:EntityFieldNumberPlacetyp0[0] <field>_N) of wild {
                   DB.NumberPlaceId $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ field
                             @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <field>_N <Database.Persist.Class.PersistEntity.Key
                                                               DB.NumberPlace>_N) of cobox0 { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ field
                        @ (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
                        (\ (key :: field) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ DB.NumberPlace
                           $dPersistEntity
                           key `cast` (Sub cobox0)
                           value })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                            ds1 `cast` (Sub (Sym cobox0)) })) }
                   DB.NumberPlaceBoard $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ field
                             @ DB.Board
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <field>_N <DB.Board>_N) of cobox0 { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ field
                        @ (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
                        (\ (x :: field) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ DB.NumberPlace
                           $dPersistEntity
                           key
                           (case value of wild2 { DB.NumberPlace ds ds1 ->
                            case x `cast` (Sub cobox0) of dt { DEFAULT ->
                            DB.NumberPlace dt ds1 } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                            case ds2 of wild2 { DB.NumberPlace ds ds4 ->
                            ds `cast` (Sub (Sym cobox0)) } })) }
                   DB.NumberPlaceBoards $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ field
                             @ DB.Boards
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <field>_N <DB.Boards>_N) of cobox0 { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ field
                        @ (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
                        (\ (x :: field) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ DB.NumberPlace
                           $dPersistEntity
                           key
                           (case value of wild2 { DB.NumberPlace ds ds1 ->
                            case x `cast` (Sub cobox0) of dt { DEFAULT ->
                            DB.NumberPlace ds dt } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                            case ds2 of wild2 { DB.NumberPlace ds ds4 ->
                            ds4 `cast` (Sub (Sym cobox0)) } })) } }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either Data.Text.Internal.Text DB.NumberPlace
  {- Arity: 1, Strictness: <S,U> -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                        y `cast`
                        (Trans
                             (Sym (DB.N:R:KeyNumberPlace[0]))
                             (Sym (DB.D:R:KeyNumberPlace0[0]))) }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           DB.NumberPlace) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Trans
                           (DB.D:R:KeyNumberPlace0[0])
                           (Trans
                                (DB.N:R:KeyNumberPlace[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fFromJSONInt64_$cparseJSON
                  `cast`
                (<Data.Aeson.Types.Internal.Value>_R
                 ->_R (Data.Aeson.Types.Internal.Parser
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (DB.N:R:KeyNumberPlace[0]))
                                        (Sym (DB.D:R:KeyNumberPlace0[0]))))))_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField DB.NumberPlace typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            DB.NumberPlace typ) ->
                 case ds
                        `cast`
                      (DB.D:R:EntityFieldNumberPlacetyp0[0] <typ>_N) of wild {
                   DB.NumberPlaceId $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Database.Persist.Class.PersistEntity.Key
                                                             DB.NumberPlace>_N) of cobox0 { DEFAULT ->
                      DB.$fPersistEntityNumberPlace13 }
                   DB.NumberPlaceBoard $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ DB.Board
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <DB.Board>_N) of cobox0 { DEFAULT ->
                      DB.$fPersistEntityNumberPlace9 }
                   DB.NumberPlaceBoards $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ DB.Boards
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <DB.Boards>_N) of cobox0 { DEFAULT ->
                      DB.$fPersistEntityNumberPlace5 } }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$cpersistUniqueKeys ::
    DB.NumberPlace
    -> [Database.Persist.Class.PersistEntity.Unique DB.NumberPlace]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DB.NumberPlace) ->
                 case ds of wild { DB.NumberPlace _board _boards ->
                 GHC.Types.[]
                   @ (Database.Persist.Class.PersistEntity.Unique
                        DB.NumberPlace) }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique DB.NumberPlace
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            DB.NumberPlace) ->
                 DB.$fPersistEntityNumberPlace2) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique DB.NumberPlace
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            DB.NumberPlace) ->
                 DB.$fPersistEntityNumberPlace1) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$ctoPersistFields ::
    DB.NumberPlace
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DB.NumberPlace) ->
                 case ds of wild { DB.NumberPlace x x1 ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ DB.Board
                      DB.$fPersistEntityNumberPlace_$s$fPersistField[]1
                      x)
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ DB.Boards
                         DB.$fPersistEntityNumberPlace_$s$fPersistField[]
                         x1)
                      (GHC.Types.[]
                         @ Database.Persist.Class.PersistField.SomePersistField)) }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistEntityNumberPlace_$s$WNumberPlaceId ::
    Database.Persist.Class.PersistEntity.EntityField
      DB.NumberPlace
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Strictness: m1, Inline: INLINE,
     Unfolding: InlineRule (0, False, False)
                (DB.NumberPlaceId
                   @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   DB.$fPersistEntityNumberPlace32)
                  `cast`
                (Sym (DB.D:R:EntityFieldNumberPlacetyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                               DB.NumberPlace>_N) -}
c867bce7b3a8a631e7f048cdb5758e43
  $fPersistEntityNumberPlace_$s$fPersistField[] ::
    Database.Persist.Class.PersistField.PersistField
      [[[GHC.Types.Int]]]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [[[GHC.Types.Int]]]
                  DB.$fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue2
                  (Database.Persist.Class.PersistField.$fPersistFieldIntMap_$cfromPersistValue1
                     @ [[GHC.Types.Int]]
                     DB.$fPersistEntityNumberPlace3) -}
b649e240c13fceeb8e8b589200b9fe5f
  $fPersistEntityNumberPlace_$s$fPersistField[]1 ::
    Database.Persist.Class.PersistField.PersistField [[GHC.Types.Int]]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [[GHC.Types.Int]]
                  DB.$fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue1
                  (Database.Persist.Class.PersistField.$fPersistFieldIntMap_$cfromPersistValue1
                     @ [GHC.Types.Int]
                     DB.$fPersistEntityNumberPlace4) -}
16e3ce7207e190f984bca0804c27e610
  $fPersistEntityNumberPlace_$s$fPersistField[]2 ::
    Database.Persist.Class.PersistField.PersistField [GHC.Types.Int]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Int]
                  DB.$fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue
                  (Database.Persist.Class.PersistField.$fPersistFieldIntMap_$cfromPersistValue1
                     @ GHC.Types.Int
                     Database.Persist.Class.PersistField.$fPersistFieldInt) -}
405e995a7d9460ca693ff31fbd82ced1
  $fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue ::
    [GHC.Types.Int] -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m11,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [GHC.Types.Int]) ->
                 Database.Persist.Types.Base.PersistList
                   (GHC.Base.build
                      @ Database.Persist.Types.Base.PersistValue
                      (\ @ b1
                         (c :: Database.Persist.Types.Base.PersistValue
                               -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ GHC.Types.Int
                         @ b1
                         (GHC.Base.mapFB
                            @ Database.Persist.Types.Base.PersistValue
                            @ b1
                            @ GHC.Types.Int
                            c
                            Database.Persist.Class.PersistField.$fPersistFieldInt_$ctoPersistValue)
                         n
                         eta))) -}
44098c0b810f2484edadf49b9af4ac7d
  $fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue1 ::
    [[GHC.Types.Int]] -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m11,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [[GHC.Types.Int]]) ->
                 Database.Persist.Types.Base.PersistList
                   (GHC.Base.build
                      @ Database.Persist.Types.Base.PersistValue
                      (\ @ b1
                         (c :: Database.Persist.Types.Base.PersistValue
                               -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ [GHC.Types.Int]
                         @ b1
                         (GHC.Base.mapFB
                            @ Database.Persist.Types.Base.PersistValue
                            @ b1
                            @ [GHC.Types.Int]
                            c
                            DB.$fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue)
                         n
                         eta))) -}
79338e230b6b4515fa7efd8d8672cb70
  $fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue2 ::
    [[[GHC.Types.Int]]] -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>m11,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: [[[GHC.Types.Int]]]) ->
                 Database.Persist.Types.Base.PersistList
                   (GHC.Base.build
                      @ Database.Persist.Types.Base.PersistValue
                      (\ @ b1
                         (c :: Database.Persist.Types.Base.PersistValue
                               -> b1 -> b1)[OneShot]
                         (n :: b1)[OneShot] ->
                       GHC.Base.foldr
                         @ [[GHC.Types.Int]]
                         @ b1
                         (GHC.Base.mapFB
                            @ Database.Persist.Types.Base.PersistValue
                            @ b1
                            @ [[GHC.Types.Int]]
                            c
                            DB.$fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue1)
                         n
                         eta))) -}
1ff7c2aa3b0883b6bbe7581cb0d2960a
  $fPersistEntityNumberPlace_$sfromList ::
    [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Data.Text.Internal.Text, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Data.Text.Internal.Text @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Map.Base.Bin
                             @ Data.Text.Internal.Text
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                             (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ky of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild4 {
                             DEFAULT
                             -> DB.$fPersistEntityNumberPlace31
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a))
                                  wild2
                             GHC.Types.LT
                             -> DB.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a))
                                  wild2 } } } } } } }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldKey ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fPersistFieldKey_$ctoPersistValue
                  DB.$fPersistFieldKey_$cfromPersistValue -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldKey_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                  `cast`
                (<Database.Persist.Types.Base.PersistValue>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (DB.N:R:KeyNumberPlace[0]))
                                        (Sym (DB.D:R:KeyNumberPlace0[0]))))))_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldKey_$ctoPersistValue ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Types.Base.PersistInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <Database.Persist.Types.Base.PersistValue>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldNumberPlace ::
    Database.Persist.Class.PersistField.PersistField DB.NumberPlace
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DB.NumberPlace
                  DB.$fPersistFieldNumberPlace_$ctoPersistValue
                  DB.$fPersistFieldNumberPlace_$cfromPersistValue -}
539a550a61c721471ca94646ec260804
  $fPersistFieldNumberPlace1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   DB.$fPersistFieldNumberPlace4
                   DB.$fPersistFieldNumberPlace2) -}
e57d4fe2770faf67d150bb588c5681b1
  $fPersistFieldNumberPlace2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   DB.$fPersistFieldNumberPlace3
                   (GHC.Types.[] @ GHC.Base.String)) -}
dbe4b95a3cb5a62a4aba35bc31eacad1
  $fPersistFieldNumberPlace3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "boards"#) -}
7f1bed6704d9f4eeaca835c51d0e06d6
  $fPersistFieldNumberPlace4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "board"#) -}
bde40d390159a8b2d7e9fbc752450819
  $fPersistFieldNumberPlace5 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
277070e0b60c2d405fdf1c962d9482f4
  $fPersistFieldNumberPlace6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DB.$fPersistFieldNumberPlace7 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
68c18bc57497571ef7651035f896d902
  $fPersistFieldNumberPlace7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 DB.$wouter1
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   DB.$fPersistFieldNumberPlace5
                   DB.$fPersistFieldNumberPlace3
                   0#
                   ipv }) -}
73071fc68ae9003500c58111bd966ca6
  $fPersistFieldNumberPlace8 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        DB.$fPersistFieldNumberPlace9 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
55f7ed9cdf997d0e1090796d537a8a1d
  $fPersistFieldNumberPlace9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 DB.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   DB.$fPersistFieldNumberPlace5
                   DB.$fPersistFieldNumberPlace4
                   0#
                   ipv }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldNumberPlace_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either Data.Text.Internal.Text DB.NumberPlace
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta2 :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta2 of wild {
                   Data.Either.Left l
                   -> Data.Either.Left @ Data.Text.Internal.Text @ DB.NumberPlace l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = DB.$fPersistFieldNumberPlace_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      DB.$fPersistEntityNumberPlace_$cfromPersistValues
                        (GHC.Base.map
                           @ [GHC.Types.Char]
                           @ Database.Persist.Types.Base.PersistValue
                           (\ (name :: GHC.Base.String) ->
                            case GHC.Magic.runRW#
                                   @ 'GHC.Types.PtrRepLifted
                                   @ Data.Text.Internal.Text
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newByteArray#
                                           @ GHC.Prim.RealWorld
                                           8#
                                           s1 of ds1 { (#,#) ipv ipv1 ->
                                    DB.$wouter
                                      (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                      DB.$fPersistFieldNumberPlace5
                                      name
                                      0#
                                      ipv }) of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                            case Data.Aeson.Types.Instances.$w$slookup
                                   @ Database.Persist.Types.Base.PersistValue
                                   ww1
                                   ww2
                                   ww3
                                   columns of wild1 {
                              GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                              GHC.Base.Just v -> v } } })
                           DB.$fPersistFieldNumberPlace1) }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldNumberPlace_$ctoPersistValue ::
    DB.NumberPlace -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U)>m12, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DB.NumberPlace) ->
                 Database.Persist.Types.Base.PersistMap
                   (case w of wild { DB.NumberPlace x x1 ->
                    GHC.Types.:
                      @ (Data.Text.Internal.Text,
                         Database.Persist.Types.Base.PersistValue)
                      (DB.$fPersistFieldNumberPlace8,
                       Database.Persist.Types.Base.PersistList
                         (DB.$fPersistFieldNumberPlace_go2 x))
                      (GHC.Types.:
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Types.Base.PersistValue)
                         (DB.$fPersistFieldNumberPlace6,
                          Database.Persist.Types.Base.PersistList
                            (DB.$fPersistFieldNumberPlace_go1 x1))
                         (GHC.Types.[]
                            @ (Data.Text.Internal.Text,
                               Database.Persist.Types.Base.PersistValue))) })) -}
7959a5addaf1448839091b691fcef981
  $fPersistFieldNumberPlace_go ::
    [(Data.Text.Internal.Text,
      Database.Persist.Types.Base.PersistValue)]
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
311be11d191587f64c0a8f0df402ae5b
  $fPersistFieldNumberPlace_go1 ::
    [[[GHC.Types.Int]]] -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
4c16a6c13ab9ae28e0816cc7159efb88
  $fPersistFieldNumberPlace_go2 ::
    [[GHC.Types.Int]] -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldSqlKey ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fPersistFieldKey
                  DB.$fPersistFieldSqlKey_$csqlType -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldSqlKey_$csqlType ::
    Data.Proxy.Proxy
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                  `cast`
                ((Data.Proxy.Proxy
                    <*>_N
                    <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                      DB.NumberPlace>)_R
                 ->_R <Database.Persist.Types.Base.SqlType>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldSqlNumberPlace ::
    Database.Persist.Sql.Class.PersistFieldSql DB.NumberPlace
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DB.NumberPlace
                  DB.$fPersistFieldNumberPlace
                  DB.$fPersistFieldSqlNumberPlace_$csqlType -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fPersistFieldSqlNumberPlace_$csqlType ::
    Data.Proxy.Proxy DB.NumberPlace
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy DB.NumberPlace) ->
                 Database.Persist.Types.Base.SqlString) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fReadKey_$creadsPrec
                  DB.$fReadKey_$creadList
                  DB.$fReadKey_$creadPrec
                  DB.$fReadKey_$creadListPrec -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Database.Persist.Class.PersistEntity.Key DB.NumberPlace]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Database.Persist.Class.PersistEntity.Key DB.NumberPlace]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   DB.$fReadKey2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_R))
                   @ b
                   eta1) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   DB.$fReadKey3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_R)))) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key DB.NumberPlace
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key DB.NumberPlace
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 -> DB.$w$creadPrec ww1 @ b w1 }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey4 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key DB.NumberPlace]
  {- Unfolding: (GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   DB.$fReadKey2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_R))
                   @ [Database.Persist.Class.PersistEntity.Key DB.NumberPlace]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key DB.NumberPlace])) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key DB.NumberPlace]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key DB.NumberPlace]
                   DB.$fReadKey4) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key DB.NumberPlace]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                DB.$fReadKey1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Database.Persist.Class.PersistEntity.Key DB.NumberPlace]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Database.Persist.Class.PersistEntity.Key DB.NumberPlace]>_R))) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                DB.$fReadKey2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_R)) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fReadKey_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   ((GHC.Read.$fReadDouble10
                       @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                       DB.$fReadKey3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Database.Persist.Class.PersistEntity.Key
                                              DB.NumberPlace>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_R)
                      @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)))) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowKey ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fShowKey_$cshowsPrec
                  DB.$fShowKey_$cshow
                  DB.$fShowKey_$cshowList -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowKey1 ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Database.Persist.Class.PersistEntity.Key
                           DB.NumberPlace)
                   (w1 :: GHC.Base.String) ->
                 DB.$w$cshowsPrec 0# w w1) -}
2e63309c72a01f6237d585874c05c2db
  $fShowKey2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
51093386425be5d229d544226523f83f
  $fShowKey3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "unNumberPlaceKey = "#) -}
ad7f2050277d801f58ffd25a5eb0273e
  $fShowKey4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NumberPlaceKey {"#) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowKey_$cshow ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           DB.NumberPlace) ->
                 DB.$fShowKey_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowKey_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key DB.NumberPlace]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   DB.$fShowKey1) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowKey_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 -> DB.$w$cshowsPrec ww1 w1 w2 }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowNumberPlace :: GHC.Show.Show DB.NumberPlace
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DB.NumberPlace
                  DB.$fShowNumberPlace_$cshowsPrec
                  DB.$fShowNumberPlace_$cshow
                  DB.$fShowNumberPlace_$cshowList -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowNumberPlace1 :: DB.NumberPlace -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DB.NumberPlace) (w1 :: GHC.Base.String) ->
                 case w of ww { DB.NumberPlace ww1 ww2 ->
                 DB.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowNumberPlace_$cshow :: DB.NumberPlace -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DB.NumberPlace) ->
                 DB.$fShowNumberPlace_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowNumberPlace_$cshowList :: [DB.NumberPlace] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DB.NumberPlace
                   DB.$fShowNumberPlace1) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fShowNumberPlace_$cshowsPrec ::
    GHC.Types.Int -> DB.NumberPlace -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(SS),1*U(U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DB.NumberPlace)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DB.NumberPlace ww3 ww4 ->
                 DB.$w$cshowsPrec1 ww1 ww3 ww4 w2 } }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToBackendKeySqlBackendNumberPlace ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend DB.NumberPlace
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ DB.NumberPlace
                  DB.$fPersistEntityNumberPlace
                  DB.$fToBackendKeySqlBackendNumberPlace1
                    `cast`
                  ((Data.Type.Equality.~)
                     <*>_N
                     (Sym (DB.D:R:PersistEntityBackendNumberPlace[0]))
                     <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_R
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  DB.unNumberPlaceKey
                  (\ (tpl :: Database.Persist.Class.PersistStore.BackendKey
                               Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   tpl)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Trans
                            (Sym (DB.N:R:KeyNumberPlace[0]))
                            (Sym (DB.D:R:KeyNumberPlace0[0]))) -}
fd64aafd477627f4573daf9d52f98db1
  $fToBackendKeySqlBackendNumberPlace1 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$fToBackendKeySqlBackendNumberPlace2
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
cf02b5168a5817aa109b8835488915bc
  $fToBackendKeySqlBackendNumberPlace2 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToHttpApiDataKey ::
    Web.HttpApiData.Internal.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fToHttpApiDataKey_$ctoUrlPiece
                  DB.$fToHttpApiDataKey_$ctoHeader
                  DB.$fToHttpApiDataKey_$ctoUrlPiece -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToHttpApiDataKey_$ctoHeader ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoHeader
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <Data.ByteString.Internal.ByteString>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToHttpApiDataKey_$ctoUrlPiece ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoUrlPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONEntity ::
    Data.Aeson.Types.Class.ToJSON
      (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
                  DB.$fToJSONEntity_$ctoJSON
                  DB.$fToJSONEntity_$ctoEncoding -}
666223ec8b18120ccddb9170a22c610b
  $fToJSONEntity1 ::
    [[GHC.Types.Int]] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Unfolding: (\ (eta :: [[GHC.Types.Int]]) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case DB.$fToJSONEntity5
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 DB.$fToJSONEntity3)
                                (GHC.Base.map
                                   @ [GHC.Types.Int]
                                   @ Data.Aeson.Types.Internal.Value
                                   DB.$fToJSONEntity2
                                   eta)
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 Data.Aeson.Types.Internal.Array dt } }) -}
d7d700b04e18b17ba5bb58bbbb1b6b44
  $fToJSONEntity2 ::
    [GHC.Types.Int] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Unfolding: (\ (eta :: [GHC.Types.Int]) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case DB.$fToJSONEntity4
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 DB.$fToJSONEntity3)
                                (GHC.Base.map
                                   @ GHC.Types.Int
                                   @ Data.Aeson.Types.Internal.Value
                                   Data.Aeson.Types.Instances.$fToJSONInt_$ctoJSON
                                   eta)
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 Data.Aeson.Types.Internal.Array dt } }) -}
5a04f072514ec2d66f1dba13e29bda73
  $fToJSONEntity3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
36fa7bdc6b1403d01ba57607e2362c9c
  $fToJSONEntity4 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
74fd190cdc2671234ed3c1a0b6850dbb
  $fToJSONEntity5 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
c0c9c2109d6e618dc80bc39051944d26
  $fToJSONEntity6 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
11b4a5063069309c7baaa47794fc974c
  $fToJSONEntity7 ::
    [GHC.Types.Int] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1,
     Unfolding: (\ (eta :: [GHC.Types.Int]) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case DB.$fToJSONEntity8
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 DB.$fToJSONEntity3)
                                (GHC.Base.map
                                   @ GHC.Types.Int
                                   @ Data.Aeson.Types.Internal.Value
                                   Data.Aeson.Types.Instances.$fToJSONInt_$ctoJSON
                                   eta)
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                 Data.Aeson.Types.Internal.Array dt } }) -}
74c595d973ad2e4576b3e7ab257cfb6a
  $fToJSONEntity8 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
76f976bbd1380a5319deadfac2388074
  $fToJSONEntity9 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONEntity_$ctoEncoding ::
    Database.Persist.Class.PersistEntity.Entity DB.NumberPlace
    -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S(LLS(SS)),1*U(A,1*U(U),1*U(U,U))>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Database.Persist.Class.PersistEntity.Entity
                             DB.NumberPlace) ->
                 Data.Aeson.Encode.Builder.encodeToBuilder
                   (DB.$fToJSONEntity_$ctoJSON eta))
                  `cast`
                (<Database.Persist.Class.PersistEntity.Entity DB.NumberPlace>_R
                 ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0])) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONEntity_$ctoJSON ::
    Database.Persist.Class.PersistEntity.Entity DB.NumberPlace
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S(LLS(SS)),1*U(A,1*U(U),1*U(U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Database.Persist.Class.PersistEntity.Entity
                           DB.NumberPlace) ->
                 case w of ww { Database.Persist.Class.PersistEntity.Entity ww1 ww2 ww3 ->
                 case ww3 of ww4 { DB.NumberPlace ww5 ww6 ->
                 DB.$w$ctoJSON ww2 ww5 ww6 } }) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONKey ::
    Data.Aeson.Types.Class.ToJSON
      (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                  DB.$fToJSONKey_$ctoJSON
                  DB.$fToJSONKey_$ctoEncoding -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONKey_$ctoEncoding ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoEncoding
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Encoding>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONKey_$ctoJSON ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m4,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoJSON
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (DB.N:R:KeyNumberPlace[0]))
                               (Sym (DB.D:R:KeyNumberPlace0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Value>_R) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONNumberPlace :: Data.Aeson.Types.Class.ToJSON DB.NumberPlace
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DB.NumberPlace
                  DB.$fToJSONNumberPlace_$ctoJSON
                  DB.$fToJSONNumberPlace_$ctoEncoding -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONNumberPlace_$ctoEncoding ::
    DB.NumberPlace -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DB.NumberPlace) ->
                 Data.Aeson.Encode.Builder.encodeToBuilder
                   (DB.$fToJSONNumberPlace_$ctoJSON eta))
                  `cast`
                (<DB.NumberPlace>_R
                 ->_R Sym (Data.Aeson.Types.Internal.N:Encoding[0])) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $fToJSONNumberPlace_$ctoJSON ::
    DB.NumberPlace -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DB.NumberPlace) ->
                 case w of ww { DB.NumberPlace ww1 ww2 ->
                 case DB.$w$ctoJSON1 ww1 ww2 of ww3 { Unit# ww4 ->
                 Data.Aeson.Types.Internal.Object ww4 } }) -}
f925064d42af4cd20cc044509a043e84
  $s$fApplicativeNoLoggingT ::
    GHC.Base.Applicative (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  DB.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$creturn
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c<*>
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c*>
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad)
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$c<*
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad) -}
0c369956ef0322f5551c48736e63d965
  $s$fApplicativeNoLoggingT_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
a39c53118b8721897b889a06136109c8
  $s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT ::
    GHC.Base.Functor (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  (Control.Monad.Logger.$fFunctorNoLoggingT_$cfmap
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad)
                  (Control.Monad.Logger.$fFunctorNoLoggingT_$c<$
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad) -}
ab37528ea70fb0718ccb24d1cda837f5
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  DB.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative
                  DB.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*>
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fApplicativeResourceT_$s$fMonadBasebNoLoggingT_$cp2MonadBase)
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c*>
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fApplicativeResourceT_$s$fMonadBasebNoLoggingT_$cp2MonadBase)
                  (Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$c<*
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fApplicativeResourceT_$s$fMonadBasebNoLoggingT_$cp2MonadBase) -}
eeb6576e5491bbfe8314c0448577fd3c
  $s$fApplicativeResourceT_$dFunctor ::
    GHC.Base.Functor (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT -}
7b9e12fdd22c3f0d8ce045760d04aaec
  $s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fApplicativeResourceT_$s$fFunctorResourceT -}
64111005cdc85459d9a9f9a8e54ce13f
  $s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure ::
    a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: a) ->
                 let {
                   x :: Control.Monad.Logger.NoLoggingT GHC.Types.IO a
                   = Control.Monad.Logger.$fApplicativeNoLoggingT_$creturn
                       @ GHC.Types.IO
                       DB.$s$fApplicativeNoLoggingT_$dMonad
                       @ a
                       eta
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N))) -}
ff59853f9a1b9e5c7a656c1d8ec97d8b
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$cfmap
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fApplicativeResourceT_$dFunctor)
                  (Control.Monad.Trans.Resource.Internal.$fFunctorResourceT_$c<$
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fApplicativeResourceT_$dFunctor) -}
3fca7d4a7bdf110f94a6ef97a9d82bdf
  $s$fApplicativeResourceT_$s$fMonadBasebNoLoggingT_$cp2MonadBase ::
    GHC.Base.Applicative (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fApplicativeNoLoggingT -}
3a5c1a6aba470080ec59c973d5ee7bf1
  $s$fMonadBaseControlbNoLoggingT ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBaseControlbNoLoggingT_$cp1MonadBaseControl
                  (Control.Monad.Logger.$fMonadBaseControlbNoLoggingT_$cliftBaseWith
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO)
                  (Control.Monad.Logger.$fMonadBaseControlbNoLoggingT_$crestoreM
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO) -}
5fe1dc711917cff74c3ed6574accbbd0
  $s$fMonadBaseControlbNoLoggingT_$dMonadBase ::
    Control.Monad.Base.MonadBase GHC.Types.IO GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Control.Monad.Base.$fMonadBaseIOIO -}
b81f4ac5761e56ab0d9deecc92d816ac
  $s$fMonadBaseControlbNoLoggingT_$s$fMonadBaseControlbNoLoggingT_$cp1MonadBaseControl ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT -}
6aab5c1a55fd9e67154374f446531998
  $s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  DB.$s$fApplicativeResourceT_$s$fMonadBasebNoLoggingT_$cp2MonadBase
                  GHC.Base.$fMonadIO
                  DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT_$cp4MonadBase
                  (Control.Monad.Logger.$fMonadBasebNoLoggingT_$cliftBase
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     DB.$s$fMonadBaseControlbNoLoggingT_$dMonadBase) -}
8b7c11bb19bb77284720d0840af71d11
  $s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT_$cp4MonadBase ::
    GHC.Base.Monad (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT -}
def5e37dddd65e432e2f03872c9a86db
  $s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT ::
    GHC.Base.Monad (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  (Control.Monad.Logger.$fMonadNoLoggingT_$cp1Monad
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad)
                  (Control.Monad.Logger.$fMonadNoLoggingT_$c>>=
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad)
                  DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT_$c>>
                  (Control.Monad.Logger.$fApplicativeNoLoggingT_$creturn
                     @ GHC.Types.IO
                     DB.$s$fApplicativeNoLoggingT_$dMonad)
                  DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT_$cfail -}
3242f5aa7b1ff42bbe99b96dee9a3622
  $s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT_$c>> ::
    Control.Monad.Logger.NoLoggingT GHC.Types.IO a
    -> Control.Monad.Logger.NoLoggingT GHC.Types.IO b
    -> Control.Monad.Logger.NoLoggingT GHC.Types.IO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,A))><L,1*C1(U(U,U))><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m1 :: Control.Monad.Logger.NoLoggingT GHC.Types.IO a)
                   (k :: Control.Monad.Logger.NoLoggingT GHC.Types.IO b) ->
                 Control.Monad.Logger.$fMonadNoLoggingT_$c>>=
                   @ GHC.Types.IO
                   DB.$s$fApplicativeNoLoggingT_$dMonad
                   @ a
                   @ b
                   m1
                   (\ (ds :: a) -> k)) -}
8ea2efe59d9f38e6e3f584e91c7a24bb
  $s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT_$cfail ::
    GHC.Base.String -> Control.Monad.Logger.NoLoggingT GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Base.String) ->
                 Control.Monad.Logger.$fMonadNoLoggingT1
                   @ GHC.Types.IO
                   @ a
                   DB.$s$fApplicativeNoLoggingT_$dMonad
                   eta) -}
6863466a6f9267da830371d347d41889
  $s$fMonadBaseControlbResourceT ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadBaseControlbResourceT_$cp1MonadBaseControl
                  (Control.Monad.Trans.Resource.Internal.$fMonadBaseControlbResourceT_$cliftBaseWith
                     @ GHC.Types.IO
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fMonadBaseControlbResourceT1)
                  (Control.Monad.Trans.Resource.Internal.$fMonadBaseControlbResourceT_$crestoreM
                     @ GHC.Types.IO
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fMonadBaseControlbResourceT1) -}
cd7b045cbc8ab0ffa5e10317739026ff
  $s$fMonadBaseControlbResourceT1 ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fMonadBaseControlbNoLoggingT -}
a32664eca57dde5b484f47bcab398e7b
  $s$fMonadBaseControlbResourceT_$s$fMonadBaseControlbResourceT_$cp1MonadBaseControl ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT -}
6b8e66b69de308ee0e91c25a42e0e1a4
  $s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  GHC.Base.$fApplicativeIO
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp2MonadBase
                  GHC.Base.$fMonadIO
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp4MonadBase
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadIOResourceT_$cliftIO -}
7199f480fd7b33bd9da3fc62a9740e3a
  $s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp2MonadBase ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fApplicativeResourceT -}
9703866130ff51172d7141af26ad9488
  $s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp4MonadBase ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                DB.$s$fMonadBaseControlbResourceT_$s$fMonadResourceT -}
803a949c1829c616c7ee9fcd33a6fbe6
  $s$fMonadBaseControlbResourceT_$s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Types.IO a) ->
                 let {
                   eta1 :: Control.Monad.Logger.NoLoggingT GHC.Types.IO a
                   = Control.Monad.Logger.$fMonadIONoLoggingT_$cliftIO
                       @ GHC.Types.IO
                       Control.Monad.IO.Class.$fMonadIOIO
                       @ a
                       eta
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N))) -}
7fb5f6be5c28cadf4384f15cb666a5f6
  $s$fMonadBaseControlbResourceT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp2MonadBase
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>=
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT_$cp4MonadBase)
                  (Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>>
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT_$cp4MonadBase)
                  DB.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadResourceT_$cfail -}
1cd19656fc7dd6b714f497129e3840c4
  $s$fMonadBaseControlbResourceT_$s$fMonadResourceT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta :: GHC.Base.String) ->
                 Control.Monad.Trans.Resource.Internal.$fMonadResourceT1
                   @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                   @ a
                   DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT_$cp4MonadBase
                   eta) -}
2a5a85ad9e6236b93a65484b277b8e3e
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp4MonadBase
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadIOResourceT_$cliftIO -}
a584f6627c39a6cb1101b6f93f808656
  $s$fMonadLoggerResourceT ::
    Control.Monad.Logger.MonadLogger
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp4MonadBase
                  DB.$s$fMonadLoggerResourceT_$s$fMonadLoggerResourceT_$cmonadLoggerLog -}
eb73f37d7888fb47766e28d4d6ee27a1
  $s$fMonadLoggerResourceT_$s$fMonadLoggerResourceT_$cmonadLoggerLog ::
    System.Log.FastLogger.LogStr.ToLogStr msg =>
    Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> msg
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) ()
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,A><L,A><L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ msg
                   (eta :: System.Log.FastLogger.LogStr.ToLogStr msg)
                   (eta1 :: Language.Haskell.TH.Syntax.Loc)
                   (eta2 :: Control.Monad.Logger.LogSource)
                   (eta3 :: Control.Monad.Logger.LogLevel)
                   (eta4 :: msg) ->
                 let {
                   eta5 :: Control.Monad.Logger.NoLoggingT GHC.Types.IO ()
                   = Control.Monad.Logger.$fMonadLoggerNoLoggingT_$cmonadLoggerLog
                       @ GHC.Types.IO
                       GHC.Base.$fMonadIO
                       @ msg
                       eta
                       eta1
                       eta2
                       eta3
                       eta4
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  eta5)
                   `cast`
                 (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                           <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <()>_N))) -}
b133c29ca15b16caa54ae2ae7395c52f
  $s.:11 ::
    [Data.Aeson.Types.Internal.Parser [[GHC.Types.Int]]]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [[[GHC.Types.Int]]] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
1222fade0b1bbf85cd700a9083f78744
  $s.:4 ::
    [Data.Aeson.Types.Internal.Parser GHC.Types.Int]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [GHC.Types.Int] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
3a632fa28d4ad7aec79b1919417bd5be
  $s.:5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
cacc63fdd867f81563b7603011c83a8c
  $s.:6 ::
    [Data.Aeson.Types.Internal.Parser [GHC.Types.Int]]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [[GHC.Types.Int]] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
ff751762dcc588f985cbfaa5d01b451f
  $s.:_f1 ::
    GHC.Types.Int
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [GHC.Types.Int]
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>,
     Unfolding: (\ (idx :: GHC.Types.Int)
                   (value :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   pathElem17 :: Data.Aeson.Types.Internal.JSONPathElement
                   = case idx of dt { GHC.Types.I# dt1 ->
                     Data.Aeson.Types.Internal.Index dt1 }
                 } in
                 let {
                   p :: Data.Aeson.Types.Internal.Parser [GHC.Types.Int]
                   = case value of wild {
                       DEFAULT
                       -> Data.Aeson.Types.Class.typeMismatch
                            @ [GHC.Types.Int]
                            DB.$s.:5
                            wild
                       Data.Aeson.Types.Internal.Array arr
                       -> case arr of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                          (DB.$s.:4
                             (GHC.List.zipWith
                                @ GHC.Types.Int
                                @ Data.Aeson.Types.Internal.Value
                                @ (Data.Aeson.Types.Internal.Parser GHC.Types.Int)
                                DB.$s.:_f4
                                DB.$s.:_f2
                                (letrec {
                                   $wgo1 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                   = \ (ww :: GHC.Prim.Int#) ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>=# ww dt1) of wild2 {
                                       GHC.Types.False
                                       -> case GHC.Prim.indexArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 dt2
                                                 (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                          GHC.Types.:
                                            @ Data.Aeson.Types.Internal.Value
                                            ipv
                                            ($wgo1 (GHC.Prim.+# ww 1#)) }
                                       GHC.Types.True
                                       -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                                 } in
                                 $wgo1 0#)))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Int]>_R)) } }
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Int] f1 r) ->
                  p `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Int]>_R)
                    @ f1
                    @ r
                    (GHC.Types.:
                       @ Data.Aeson.Types.Internal.JSONPathElement
                       pathElem17
                       path)
                    kf
                    ks)
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <[GHC.Types.Int]>_R))) -}
a8315fc9b89f5bf30cf2a121c0961e8a
  $s.:_f2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 0# 9223372036854775807#) -}
164a5c37c325947f8c3e3118875c804a
  $s.:_f4 ::
    GHC.Types.Int
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser GHC.Types.Int
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U> -}
293fb6cd391b7f4f9eb9388b0a6a286f
  $s.:_f5 ::
    GHC.Types.Int
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [[GHC.Types.Int]]
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>,
     Unfolding: (\ (idx :: GHC.Types.Int)
                   (value :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   pathElem17 :: Data.Aeson.Types.Internal.JSONPathElement
                   = case idx of dt { GHC.Types.I# dt1 ->
                     Data.Aeson.Types.Internal.Index dt1 }
                 } in
                 let {
                   p :: Data.Aeson.Types.Internal.Parser [[GHC.Types.Int]]
                   = case value of wild {
                       DEFAULT
                       -> Data.Aeson.Types.Class.typeMismatch
                            @ [[GHC.Types.Int]]
                            DB.$s.:5
                            wild
                       Data.Aeson.Types.Internal.Array arr
                       -> (DB.$s.:6
                             (GHC.List.zipWith
                                @ GHC.Types.Int
                                @ Data.Aeson.Types.Internal.Value
                                @ (Data.Aeson.Types.Internal.Parser [GHC.Types.Int])
                                DB.$s.:_f1
                                DB.$s.:_f2
                                (case arr of v2 { Data.Vector.Vector ipv ipv1 ipv2 ->
                                 letrec {
                                   $wgo1 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                   = \ (ww :: GHC.Prim.Int#) ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>=# ww ipv1) of wild1 {
                                       GHC.Types.False
                                       -> case GHC.Prim.indexArray#
                                                 @ Data.Aeson.Types.Internal.Value
                                                 ipv2
                                                 (GHC.Prim.+# ipv ww) of ds2 { Unit# ipv3 ->
                                          GHC.Types.:
                                            @ Data.Aeson.Types.Internal.Value
                                            ipv3
                                            ($wgo1 (GHC.Prim.+# ww 1#)) }
                                       GHC.Types.True
                                       -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                                 } in
                                 $wgo1 0# })))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[[GHC.Types.Int]]>_R)) }
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f1 r)
                    (ks :: Data.Aeson.Types.Internal.Success [[GHC.Types.Int]] f1 r) ->
                  p `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[[GHC.Types.Int]]>_R)
                    @ f1
                    @ r
                    (GHC.Types.:
                       @ Data.Aeson.Types.Internal.JSONPathElement
                       pathElem17
                       path)
                    kf
                    ks)
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <[[GHC.Types.Int]]>_R))) -}
b91e6dba15662b4ac013e9cbe4ae8b60
  $tc'NumberPlace :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3997919885364735418##
                   5296539503194317721##
                   DB.$trModule
                   DB.$tc'NumberPlace1) -}
fe6455b324a010fc8e3e65735862050e
  $tc'NumberPlace1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NumberPlace"#) -}
7a8587c2ee4729b9fd312dbcd3df0eb1
  $tcNumberPlace :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4701928281305136533##
                   6934446164728949223##
                   DB.$trModule
                   DB.$tcNumberPlace1) -}
5d8e5c1647d6bbb22f801c46fd930780
  $tcNumberPlace1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "NumberPlace"#) -}
b8f86d6398ea09c76c2cbb255ca4f7d2
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module DB.$trModule2 DB.$trModule1) -}
1c7b741df3f67339605ba5d90a25b2d9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DB"#) -}
5c697fa099e22e9889fa6e476b2d2b6c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
226a992b37a5cd3dd3fbc0a697d4139d
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key DB.NumberPlace
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
226a992b37a5cd3dd3fbc0a697d4139d
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key DB.NumberPlace)
                   (w1 :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DB.$fShowKey4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          DB.$fShowKey3
                          (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                             0#
                             w `cast`
                             (Trans (DB.D:R:KeyNumberPlace0[0]) (DB.N:R:KeyNumberPlace[0]))
                             (GHC.Base.++ @ GHC.Types.Char DB.$fShowKey2 x)))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w1
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)) }) -}
a2ad0bb99befefe467939597deddb775
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> DB.Board -> DB.Boards -> GHC.Base.String -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><S,U><S,U><L,U>, Inline: [0] -}
226a992b37a5cd3dd3fbc0a697d4139d
  $w$ctoJSON ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> DB.Board -> DB.Boards -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,1*U(U)><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Database.Persist.Class.PersistEntity.Key
                            DB.NumberPlace)
                   (ww1 :: DB.Board)
                   (ww2 :: DB.Boards) ->
                 case DB.$w$ctoJSON1 ww1 ww2 of ww3 { Unit# ww4 ->
                 case ww
                        `cast`
                      (Trans
                           (DB.D:R:KeyNumberPlace0[0])
                           (Trans
                                (DB.N:R:KeyNumberPlace[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of wild { GHC.Int.I64# x# ->
                 case GHC.Integer.Type.smallInteger x# of dt { DEFAULT ->
                 case Database.Persist.Class.PersistEntity.entityIdFromJSON1 of ww5 { Data.Text.Internal.Text ww6 ww7 ww8 ->
                 case Data.Aeson.Types.Instances.$w$sinsert
                        @ Data.Aeson.Types.Internal.Value
                        ww6
                        ww7
                        ww8
                        (Data.Aeson.Types.Internal.Number
                           (Data.Scientific.Scientific dt 0#))
                        ww4 of dt1 { DEFAULT ->
                 Data.Aeson.Types.Internal.Object dt1 } } } } }) -}
0fdbe38becac1cb843e34badc24d6737
  $w$ctoJSON1 ::
    DB.Board -> DB.Boards -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: DB.Board) (ww1 :: DB.Boards) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (DB.$fPersistEntityNumberPlace12,
                            case GHC.Magic.runRW#
                                   @ 'GHC.Types.PtrRepLifted
                                   @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newArray#
                                           @ Data.Aeson.Types.Internal.Value
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           0#
                                           (Data.Vector.Mutable.uninitialised
                                              @ Data.Aeson.Types.Internal.Value)
                                           s1
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                                    case DB.$fToJSONEntity9
                                           GHC.Types.SPEC
                                           ((Data.Vector.Mutable.MVector
                                               @ (Control.Monad.Primitive.PrimState
                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                               @ Data.Aeson.Types.Internal.Value
                                               0#
                                               0#
                                               ipv1)
                                              `cast`
                                            (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                             (GHC.ST.ST
                                                                                                GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                            DB.$fToJSONEntity3)
                                           (GHC.Base.map
                                              @ [GHC.Types.Int]
                                              @ Data.Aeson.Types.Internal.Value
                                              DB.$fToJSONEntity7
                                              ww)
                                           ipv
                                             `cast`
                                           (GHC.Prim.State#
                                              (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                   <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                                    case ipv7 of wild5 { (,) v' n ->
                                    case v'
                                           `cast`
                                         (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                    (GHC.ST.ST
                                                                                       GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                                    case n of dt5 { GHC.Types.I# dt6 ->
                                    case GHC.Prim.unsafeFreezeArray#
                                           @ (Control.Monad.Primitive.PrimState
                                                (GHC.ST.ST GHC.Prim.RealWorld))
                                           @ Data.Aeson.Types.Internal.Value
                                           dt2
                                           ipv6
                                             `cast`
                                           (GHC.Prim.State#
                                              (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                        <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                                    (# ipv2
                                         `cast`
                                       (GHC.Prim.State#
                                          (Control.Monad.Primitive.D:R:PrimStateST[0]
                                               <GHC.Prim.RealWorld>_N))_R,
                                       Data.Vector.Vector
                                         @ Data.Aeson.Types.Internal.Value
                                         dt
                                         dt6
                                         ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                            case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                            Data.Aeson.Types.Internal.Array dt } })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (DB.$fPersistEntityNumberPlace8,
                               case GHC.Magic.runRW#
                                      @ 'GHC.Types.PtrRepLifted
                                      @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                                      (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.newArray#
                                              @ Data.Aeson.Types.Internal.Value
                                              @ (Control.Monad.Primitive.PrimState
                                                   (GHC.ST.ST GHC.Prim.RealWorld))
                                              0#
                                              (Data.Vector.Mutable.uninitialised
                                                 @ Data.Aeson.Types.Internal.Value)
                                              s1
                                                `cast`
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                           <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                                       case DB.$fToJSONEntity6
                                              GHC.Types.SPEC
                                              ((Data.Vector.Mutable.MVector
                                                  @ (Control.Monad.Primitive.PrimState
                                                       (GHC.ST.ST GHC.Prim.RealWorld))
                                                  @ Data.Aeson.Types.Internal.Value
                                                  0#
                                                  0#
                                                  ipv1)
                                                 `cast`
                                               (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                                (GHC.ST.ST
                                                                                                   GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                               DB.$fToJSONEntity3)
                                              (GHC.Base.map
                                                 @ [[GHC.Types.Int]]
                                                 @ Data.Aeson.Types.Internal.Value
                                                 DB.$fToJSONEntity1
                                                 ww1)
                                              ipv
                                                `cast`
                                              (GHC.Prim.State#
                                                 (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                      <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                                       case ipv7 of wild5 { (,) v' n ->
                                       case v'
                                              `cast`
                                            (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                                       (GHC.ST.ST
                                                                                          GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                                       case n of dt5 { GHC.Types.I# dt6 ->
                                       case GHC.Prim.unsafeFreezeArray#
                                              @ (Control.Monad.Primitive.PrimState
                                                   (GHC.ST.ST GHC.Prim.RealWorld))
                                              @ Data.Aeson.Types.Internal.Value
                                              dt2
                                              ipv6
                                                `cast`
                                              (GHC.Prim.State#
                                                 (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                           <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                                       (# ipv2
                                            `cast`
                                          (GHC.Prim.State#
                                             (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                  <GHC.Prim.RealWorld>_N))_R,
                                          Data.Vector.Vector
                                            @ Data.Aeson.Types.Internal.Value
                                            dt
                                            dt6
                                            ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                               case ipv2 of dt { Data.Vector.Vector ipv ipv4 ipv5 ->
                               Data.Aeson.Types.Internal.Array dt } })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
02113e0902c440a80c7491a08086266a
  $w$s$wupdateOrSnocWithKey ::
    (Data.Text.Internal.Text -> v -> v -> v)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><L,U><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (w :: Data.Text.Internal.Text -> v -> v -> v)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w1 :: v)
                   (w2 :: GHC.Prim.Array#
                            (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)) ->
                 letrec {
                   $wgo1 :: GHC.Prim.ByteArray#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> v
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
                        Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.ByteArray#)
                       (ww4 :: GHC.Prim.Int#)
                       (ww5 :: GHC.Prim.Int#)
                       (w3 :: v)
                       (ww6 :: GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                       (ww7 :: GHC.Prim.Int#)
                       (ww8 :: GHC.Prim.Int#) ->
                     let {
                       k2 :: Data.Text.Internal.Text = Data.Text.Internal.Text ww3 ww4 ww5
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww7 ww8) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ww6
                                 ww7 of ds { Unit# ipv3 ->
                          case ipv3 of wild1 { Data.HashMap.Base.L kx y ->
                          case kx of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==# ww5 dt5) of wild3 {
                            GHC.Types.False
                            -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                            GHC.Types.True
                            -> case {__pkg_ccall text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld
                                                                                                                  -> (# GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld,
                                                                                                                        GHC.Prim.Int# #)}
                                      ww3
                                      (GHC.Prim.int2Word# ww4)
                                      dt3
                                      (GHC.Prim.int2Word# dt4)
                                      (GHC.Prim.int2Word# ww5)
                                      GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                               case GHC.Prim.narrow32Int# ds12 of wild5 {
                                 DEFAULT -> $wgo1 ww3 ww4 ww5 w3 ww6 (GHC.Prim.+# ww7 1#) ww8
                                 0#
                                 -> case GHC.Prim.thawArray#
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           @ GHC.Prim.RealWorld
                                           ww6
                                           0#
                                           (GHC.Prim.sizeofArray#
                                              @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                              ww6)
                                           GHC.Prim.realWorld# of ds1 { (#,#) ipv4 ipv5 ->
                                    case GHC.Prim.writeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           ww7
                                           (Data.HashMap.Base.L
                                              @ Data.Text.Internal.Text
                                              @ v
                                              k2
                                              (w k2 w3 y))
                                           ipv4 of s' { DEFAULT ->
                                    case GHC.Prim.unsafeFreezeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           s' of ds2 { (#,#) ipv6 ipv7 ->
                                    ipv7 } } } } } } } } }
                       GHC.Types.True
                       -> case GHC.Prim.newArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 (GHC.Prim.+# ww8 1#)
                                 (Data.HashMap.Array.undefinedElem
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                                 GHC.Prim.realWorld# of ds { (#,#) ipv3 ipv4 ->
                          case GHC.Prim.copyArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 ww6
                                 0#
                                 ipv4
                                 0#
                                 ww8
                                 ipv3 of s2 { DEFAULT ->
                          case GHC.Prim.writeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 ww8
                                 (Data.HashMap.Base.L @ Data.Text.Internal.Text @ v k2 w3)
                                 s2 of s' { DEFAULT ->
                          case GHC.Prim.unsafeFreezeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 s' of ds1 { (#,#) ipv5 ipv6 ->
                          ipv6 } } } } }
                 } in
                 $wgo1
                   ww
                   ww1
                   ww2
                   w1
                   w2
                   0#
                   (GHC.Prim.sizeofArray#
                      @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                      w2)) -}
a56e0ec239971341612c1c2f0f8c7987
  $w$sgo10 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
c2586684b3051260ff23c5d8d1a767e2
  $w$sunsafeInsert ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 5, Strictness: <S,U><S,U><S,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ v
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: v)
                   (w1 :: Data.HashMap.Base.HashMap Data.Text.Internal.Text v) ->
                 case {__pkg_ccall hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Int# #)}
                        ww
                        (GHC.Prim.uncheckedIShiftL# ww1 1#)
                        (GHC.Prim.uncheckedIShiftL# ww2 1#)
                        -2578643520546668380#
                        GHC.Prim.realWorld# of wild { (#,#) ds ds1 ->
                 case DB.$wpoly_go1
                        @ GHC.Prim.RealWorld
                        @ v
                        (GHC.Prim.int2Word# ds1)
                        ww
                        ww1
                        ww2
                        w
                        0#
                        w1
                        GHC.Prim.realWorld# of ds2 { (#,#) ipv ipv1 ->
                 ipv1 } }) -}
5919d581f52cb4cb203d036059c53808
  $wgo ::
    [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
    -> GHC.Prim.Int# -> [DB.NumberPlace]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,1*U>,
     Inline: [0] -}
1a841aee305354931c87b882a492339d
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
bcf9dfdcbf53efd03f75a04cfc7b90fc
  $wouter1 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
ccd039fed2d077b160d8d0c4541d32f1
  $wouter2 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
8ed878c9556321f4e6aa56f5fdc65b39
  $wpoly_go1 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          Data.HashMap.Base.HashMap Data.Text.Internal.Text v #)
  {- Arity: 8,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><S,1*U><L,U>,
     Inline: [0] -}
6c544e960bfda8466dc307a07851f27f
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Data.Text.Internal.Text a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
533a12dd44cef23ae83689ce21e7376d
  $wunsafeDrop :: GHC.Prim.Int# -> [a1] -> [a1]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,1*U>,
     Inline: [0] -}
718ae2547df695ffecd14f80360620b3
  type Board = [[GHC.Types.Int]]
30c04600b31a4f9982d38559702afe0e
  type Boards = [[[GHC.Types.Int]]]
226a992b37a5cd3dd3fbc0a697d4139d
  axiom D:R:EntityFieldNumberPlacetyp0::
      Database.Persist.Class.PersistEntity.EntityField DB.NumberPlace
        = DB.R:EntityFieldNumberPlacetyp
226a992b37a5cd3dd3fbc0a697d4139d
  axiom D:R:KeyNumberPlace0::
      Database.Persist.Class.PersistEntity.Key DB.NumberPlace
        = DB.R:KeyNumberPlace
226a992b37a5cd3dd3fbc0a697d4139d
  axiom D:R:PersistEntityBackendNumberPlace::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        DB.NumberPlace
        = Database.Persist.Sql.Types.Internal.SqlBackend
226a992b37a5cd3dd3fbc0a697d4139d
  axiom D:R:UniqueNumberPlace0::
      Database.Persist.Class.PersistEntity.Unique DB.NumberPlace
        = DB.R:UniqueNumberPlace
226a992b37a5cd3dd3fbc0a697d4139d
  data NumberPlace
    = NumberPlace {numberPlaceBoard :: !DB.Board,
                   numberPlaceBoards :: !DB.Boards}
bddb74c98220a76b68587aa5c2ffc29a
  type NumberPlaceId =
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
226a992b37a5cd3dd3fbc0a697d4139d
  data instance Database.Persist.Class.PersistEntity.EntityField
                  DB.NumberPlace typ where
    NumberPlaceId :: typ
                     Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                            DB.NumberPlace =>
                     Database.Persist.Class.PersistEntity.EntityField DB.NumberPlace typ
    NumberPlaceBoard :: typ Data.Type.Equality.~ DB.Board =>
                        Database.Persist.Class.PersistEntity.EntityField DB.NumberPlace typ
    NumberPlaceBoards :: typ Data.Type.Equality.~ DB.Boards =>
                         Database.Persist.Class.PersistEntity.EntityField DB.NumberPlace typ
    RecFlag: Recursive
226a992b37a5cd3dd3fbc0a697d4139d
  newtype instance Database.Persist.Class.PersistEntity.Key
                     DB.NumberPlace
    = NumberPlaceKey {unNumberPlaceKey :: Database.Persist.Class.PersistStore.BackendKey
                                            Database.Persist.Sql.Types.Internal.SqlBackend}
    RecFlag: Recursive
226a992b37a5cd3dd3fbc0a697d4139d
  data instance Database.Persist.Class.PersistEntity.Unique
                  DB.NumberPlace
    RecFlag: Recursive
226a992b37a5cd3dd3fbc0a697d4139d
  axiom Rep_NumberPlace::
      GHC.Generics.Rep DB.NumberPlace
        = GHC.Generics.D1
            ('GHC.Generics.MetaData "NumberPlace" "DB" "main" 'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "NumberPlace" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "numberPlaceBoard")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.SourceStrict
                     'GHC.Generics.DecidedStrict)
                  (GHC.Generics.Rec0 DB.Board)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "numberPlaceBoards")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.SourceStrict
                                      'GHC.Generics.DecidedStrict)
                                   (GHC.Generics.Rec0 DB.Boards)))
5038e535a6b09477b4634a2556aac47a
  doMigration :: GHC.Types.IO ()
  {- Unfolding: InlineRule (0, True, True)
                DB.doMigration1
                  `cast`
                (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R <()>_N) -}
f7ed099e8166a504348726567ca69941
  doMigration1 :: Control.Monad.Logger.NoLoggingT GHC.Types.IO ()
  {- Unfolding: (Control.Monad.Trans.Resource.runResourceT
                   @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                   @ ()
                   DB.$s$fMonadBaseControlbNoLoggingT
                   DB.doMigration2
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0] <()>_R))
                                  (Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                            <GHC.Types.IO>_R) <()>_N))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <()>_N)))) -}
479991b1b2e8483e28aa93f4e46b1917
  doMigration2 ::
    GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2,
     Unfolding: (\ (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (DB.doMigration_ds
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                            <Database.Persist.Sql.Types.Internal.LogFunc>_N)
                         r)
                        `cast`
                      (Trans
                           (Control.Monad.Logger.N:NoLoggingT[0]
                                <GHC.Types.IO>_R <Database.Persist.Sql.Types.Internal.LogFunc>_N)
                           (GHC.Types.N:IO[0]
                                <Database.Persist.Sql.Types.Internal.LogFunc>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 ((Control.Exception.Lifted.bracket
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                     @ Database.Persist.Sql.Types.Internal.SqlBackend
                     @ ()
                     @ ()
                     DB.$s$fMonadBaseControlbResourceT
                     (\ (ds :: GHC.IORef.IORef
                                 Control.Monad.Trans.Resource.Internal.ReleaseMap)
                        (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                      Database.Persist.MySQL.$wopen'
                        @ Database.Persist.Sql.Types.Internal.SqlBackend
                        DB.doMigration5
                          `cast`
                        (GHC.Classes.(%,%)
                           <Database.Persist.Class.PersistStore.IsPersistBackend
                              Database.Persist.Sql.Types.Internal.SqlBackend>_N
                           ((Data.Type.Equality.~)
                              <*>_N
                              (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                              <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                        Database.MySQL.Base.defaultConnectInfo7
                        Database.MySQL.Base.defaultConnectInfo6
                        DB.doMigration8
                        DB.doMigration7
                        DB.doMigration6
                        Database.MySQL.Base.defaultConnectInfo1
                        (GHC.Types.[] @ GHC.Types.Char)
                        (GHC.Base.Nothing @ Database.MySQL.Base.SSLInfo)
                        ipv1
                        eta)
                       `cast`
                     (Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Trans
                                    (Sym (GHC.Types.N:IO[0]
                                              <Database.Persist.Sql.Types.Internal.SqlBackend>_R))
                                    (Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                              <GHC.Types.IO>_R) <Database.Persist.Sql.Types.Internal.SqlBackend>_N))
                          (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                                    <Database.Persist.Sql.Types.Internal.SqlBackend>_N)))
                     DB.doMigration_lvl25
                     DB.doMigration3
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Control.Monad.Trans.Resource.Internal.ResourceT
                             (Control.Monad.Logger.NoLoggingT GHC.Types.IO)>_R
                          <()>_N))
                    `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <()>_N)
                    r)
                   `cast`
                 (Trans
                      (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R <()>_N)
                      (GHC.Types.N:IO[0] <()>_R))
                   ipv }) -}
98d74abe44124cd256d3ec287db5d2b9
  doMigration3 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
      ()
  {- Unfolding: (Database.Persist.Sql.Migration.runMigration
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                        (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                   DB.$s$fMonadIOResourceT
                   DB.doMigration4
                     `cast`
                   (Trans
                        (<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <(((), [Data.Text.Internal.Text]),
                                         [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)])>_R))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                       <GHC.Types.IO>_R
                                       <(((), [Data.Text.Internal.Text]),
                                         [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)])>_N))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)]>_N
                                            <Control.Monad.Trans.Reader.ReaderT
                                               Database.Persist.Sql.Types.Internal.SqlBackend
                                               GHC.Types.IO>_R
                                            <((), [Data.Text.Internal.Text])>_N))
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Data.Text.Internal.Text]>_N
                                            <Control.Monad.Trans.Writer.Lazy.WriterT
                                               Database.Persist.Sql.Types.CautiousMigration
                                               (Control.Monad.Trans.Reader.ReaderT
                                                  Database.Persist.Sql.Types.Internal.SqlBackend
                                                  GHC.Types.IO)>_R
                                            <()>_N)))))) -}
0cc8cf2108690b37ae591bdd2d4ac06b
  doMigration4 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (((), [Data.Text.Internal.Text]),
           [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)]) #)
  {- Arity: 2,
     Unfolding: (\ (w2 :: Database.Persist.Sql.Types.Internal.SqlBackend)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { Database.Persist.Sql.Types.Internal.SqlBackend ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 Database.Persist.Sql.Migration.$wmigrate
                   DB.doMigration_w
                   DB.$fPersistEntityNumberPlace20
                   ww1
                   ww5
                   ww7
                   w3 }) -}
27bfa05584314ba83e01e1928bf9df82
  doMigration5 ::
    (Database.Persist.Class.PersistStore.IsPersistBackend
       Database.Persist.Sql.Types.Internal.SqlBackend,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend,
                  DB.$fToBackendKeySqlBackendNumberPlace2
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
2e89ae070b7ba6c9d0028b3e93f18855
  doMigration6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "puzzle_db"#) -}
99c74b06ef9c090f9e43aa0212b0f3c6
  doMigration7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "db"#) -}
7350784e3eec78b33abedb54dae02a3f
  doMigration8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dbuser"#) -}
b8fb70db955f9ef0f2e804bb63e546bd
  doMigration_ds ::
    Control.Monad.Trans.Resource.Internal.ResourceT
      (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
      Database.Persist.Sql.Types.Internal.LogFunc
  {- Unfolding: (Database.Persist.Sql.Run.askLogFunc
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                        (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                   DB.$s$fMonadBaseControlbResourceT
                   DB.$s$fMonadLoggerResourceT) -}
b34948dae4d6bb61933b55f6b61266e8
  doMigration_lvl25 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLLS(S)LLLLLLLLLL),1*U(A,A,A,A,1*U(U),1*C1(U(U,U)),A,A,A,A,A,A,A,A,A)><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Sql.Types.Internal.SqlBackend)
                   (eta :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 (DB.$s$fMonadBaseControlbResourceT_$s$fMonadIOResourceT_$cliftIO
                    @ ()
                    (Database.Persist.Sql.Run.close'1
                       @ Database.Persist.Sql.Types.Internal.SqlBackend
                       DB.doMigration5
                         `cast`
                       (GHC.Classes.(%,%)
                          <Database.Persist.Class.PersistStore.IsPersistBackend
                             Database.Persist.Sql.Types.Internal.SqlBackend>_N
                          ((Data.Type.Equality.~)
                             <*>_N
                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                             <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                       x)
                      `cast`
                    (Sym (GHC.Types.N:IO[0] <()>_R)))
                   `cast`
                 (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                      <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <()>_N)
                   eta)
                  `cast`
                (<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <()>_N)) -}
49d160646a5adbbdb7f60bc5407d33c0
  doMigration_w :: [Database.Persist.Types.Base.EntityDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.EntityDef
                   DB.$fPersistEntityNumberPlace20
                   (GHC.Types.[] @ Database.Persist.Types.Base.EntityDef)) -}
d8b604f9ee4a8697b6f10153d8afac04
  insertNP ::
    [[GHC.Types.Int]] -> [[[GHC.Types.Int]]] -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                DB.insertNP1
                  `cast`
                (<[[GHC.Types.Int]]>_R
                 ->_R <[[[GHC.Types.Int]]]>_R
                 ->_R Control.Monad.Logger.N:NoLoggingT[0]
                          <GHC.Types.IO>_R <()>_N) -}
5d718614949bca15590638aff5da6b1d
  insertNP1 ::
    [[GHC.Types.Int]]
    -> [[[GHC.Types.Int]]]
    -> Control.Monad.Logger.NoLoggingT GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (board :: [[GHC.Types.Int]])
                   (boards :: [[[GHC.Types.Int]]]) ->
                 Control.Monad.Trans.Resource.runResourceT
                   @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                   @ ()
                   DB.$s$fMonadBaseControlbNoLoggingT
                   (DB.insertNP3
                      @ ()
                      (Database.Persist.Sql.Run.runSqlConn
                         @ (Control.Monad.Trans.Resource.Internal.ResourceT
                              (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                         @ Database.Persist.Sql.Types.Internal.SqlBackend
                         @ ()
                         DB.$s$fMonadBaseControlbResourceT
                         DB.doMigration5
                           `cast`
                         (GHC.Classes.(%,%)
                            <Database.Persist.Class.PersistStore.IsPersistBackend
                               Database.Persist.Sql.Types.Internal.SqlBackend>_N
                            ((Data.Type.Equality.~)
                               <*>_N
                               (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                               <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                         (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert_
                            @ (Control.Monad.Trans.Resource.Internal.ResourceT
                                 (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                            @ DB.NumberPlace
                            DB.$s$fMonadIOResourceT
                            DB.insertNP2
                              `cast`
                            (GHC.Classes.(%,%)
                               <Database.Persist.Class.PersistEntity.PersistEntity
                                  DB.NumberPlace>_N
                               ((Data.Type.Equality.~)
                                  <*>_N
                                  (Sym (DB.D:R:PersistEntityBackendNumberPlace[0]))
                                  (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                            (DB.$WNumberPlace board boards))))
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0] <()>_R))
                                  (Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                            <GHC.Types.IO>_R) <()>_N))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <()>_N)))) -}
2d7e41940bb698355ff86ff3ca13e065
  insertNP2 ::
    (Database.Persist.Class.PersistEntity.PersistEntity DB.NumberPlace,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((DB.$fPersistEntityNumberPlace,
                  DB.$fToBackendKeySqlBackendNumberPlace2
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
0606668a90d72feb72969cfb5490a267
  insertNP3 ::
    (Database.Persist.Sql.Types.Internal.SqlBackend
     -> Control.Monad.Trans.Resource.Internal.ResourceT
          (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
    -> GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <L,U>,
     Unfolding: (\ @ a
                   (eta2 :: Database.Persist.Sql.Types.Internal.SqlBackend
                            -> Control.Monad.Trans.Resource.Internal.ResourceT
                                 (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (DB.doMigration_ds
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                            <Database.Persist.Sql.Types.Internal.LogFunc>_N)
                         r)
                        `cast`
                      (Trans
                           (Control.Monad.Logger.N:NoLoggingT[0]
                                <GHC.Types.IO>_R <Database.Persist.Sql.Types.Internal.LogFunc>_N)
                           (GHC.Types.N:IO[0]
                                <Database.Persist.Sql.Types.Internal.LogFunc>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 ((Control.Exception.Lifted.bracket
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                     @ Database.Persist.Sql.Types.Internal.SqlBackend
                     @ ()
                     @ a
                     DB.$s$fMonadBaseControlbResourceT
                     (\ (ds :: GHC.IORef.IORef
                                 Control.Monad.Trans.Resource.Internal.ReleaseMap)
                        (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                      Database.Persist.MySQL.$wopen'
                        @ Database.Persist.Sql.Types.Internal.SqlBackend
                        DB.doMigration5
                          `cast`
                        (GHC.Classes.(%,%)
                           <Database.Persist.Class.PersistStore.IsPersistBackend
                              Database.Persist.Sql.Types.Internal.SqlBackend>_N
                           ((Data.Type.Equality.~)
                              <*>_N
                              (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                              <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                        Database.MySQL.Base.defaultConnectInfo7
                        Database.MySQL.Base.defaultConnectInfo6
                        DB.doMigration8
                        DB.doMigration7
                        DB.doMigration6
                        Database.MySQL.Base.defaultConnectInfo1
                        (GHC.Types.[] @ GHC.Types.Char)
                        (GHC.Base.Nothing @ Database.MySQL.Base.SSLInfo)
                        ipv1
                        eta)
                       `cast`
                     (Trans
                          (<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Trans
                                    (Sym (GHC.Types.N:IO[0]
                                              <Database.Persist.Sql.Types.Internal.SqlBackend>_R))
                                    (Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                              <GHC.Types.IO>_R) <Database.Persist.Sql.Types.Internal.SqlBackend>_N))
                          (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                    <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                                    <Database.Persist.Sql.Types.Internal.SqlBackend>_N)))
                     DB.doMigration_lvl25
                     eta2)
                    `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N)
                    r)
                   `cast`
                 (Trans
                      (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R <a>_N)
                      (GHC.Types.N:IO[0] <a>_R))
                   ipv }) -}
b2089ccc0524628d6ee9c8477a6977d7
  numberPlaceBoard :: DB.NumberPlace -> DB.Board
  RecSel Left DB.NumberPlace
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DB.NumberPlace) ->
                 case ds of wild { DB.NumberPlace ds1 ds2 -> ds1 }) -}
be29036fe22c7ca3000edd31148ffcde
  numberPlaceBoards :: DB.NumberPlace -> DB.Boards
  RecSel Left DB.NumberPlace
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DB.NumberPlace) ->
                 case ds of wild { DB.NumberPlace ds1 ds2 -> ds2 }) -}
2cfa92282dc51577beebb4a177cddd37
  selectAllNP :: GHC.Types.IO [DB.NumberPlace]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DB.selectAllNP1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[DB.NumberPlace]>_R)) -}
5b43dc9097b379b250f305111bbf828b
  selectAllNP1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DB.NumberPlace] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Control.Monad.Trans.Resource.runResourceT
                         @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                         @ [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
                         DB.$s$fMonadBaseControlbNoLoggingT
                         DB.selectAllNP3
                           `cast`
                         (Trans
                              (<GHC.IORef.IORef
                                  Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                               ->_R Trans
                                        (Sym (GHC.Types.N:IO[0]
                                                  <[Database.Persist.Class.PersistEntity.Entity
                                                      DB.NumberPlace]>_R))
                                        (Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                  <GHC.Types.IO>_R) <[Database.Persist.Class.PersistEntity.Entity
                                                                        DB.NumberPlace]>_N))
                              (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                        <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                                        <[Database.Persist.Class.PersistEntity.Entity
                                            DB.NumberPlace]>_N))))
                        `cast`
                      (Trans
                           (Control.Monad.Logger.N:NoLoggingT[0]
                                <GHC.Types.IO>_R <[Database.Persist.Class.PersistEntity.Entity
                                                     DB.NumberPlace]>_N)
                           (GHC.Types.N:IO[0]
                                <[Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.map
                      @ (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)
                      @ DB.NumberPlace
                      DB.selectAllNP2
                      ipv1 #) }) -}
1009b2665c4d8f0c927fc96509c04b33
  selectAllNP2 ::
    Database.Persist.Class.PersistEntity.Entity DB.NumberPlace
    -> DB.NumberPlace
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (ds :: Database.Persist.Class.PersistEntity.Entity
                            DB.NumberPlace) ->
                 case ds of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 u ->
                 u }) -}
9b216677c0e4cd27257907901828fd09
  selectAllNP3 ::
    GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace] #)
  {- Arity: 2,
     Unfolding: (DB.insertNP3
                   @ [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
                   DB.selectAllNP4) -}
e16be3a54acc6a7646236ab99a281b43
  selectAllNP4 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
         [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                        (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
                   DB.$s$fMonadBaseControlbResourceT
                   DB.doMigration5
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistStore.IsPersistBackend
                         Database.Persist.Sql.Types.Internal.SqlBackend>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                         <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                   DB.selectAllNP5
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                             <Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO)>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 DB.NumberPlace]>_N))) -}
6e26ace2459f65d54eacd319b4959787
  selectAllNP5 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
         [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
  {- Arity: 1,
     Unfolding: (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)))
                   = DB.selectAllNP_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Control.Monad.Trans.Resource.Internal.ResourceT
                             (Control.Monad.Logger.NoLoggingT GHC.Types.IO)>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace))>_N)
                       r1
                 } in
                 (\ (r :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                             <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace))>_N)
                          r)
                         `cast`
                       (Trans
                            (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R <Data.Acquire.Internal.Acquire
                                                     (Data.Conduit.Internal.Conduit.Source
                                                        GHC.Types.IO
                                                        (Database.Persist.Class.PersistEntity.Entity
                                                           DB.NumberPlace))>_N)
                            (GHC.Types.N:IO[0]
                                 <Data.Acquire.Internal.Acquire
                                    (Data.Conduit.Internal.Conduit.Source
                                       GHC.Types.IO
                                       (Database.Persist.Class.PersistEntity.Entity
                                          DB.NumberPlace))>_R))
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace))
                     @ [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1 @ DB.NumberPlace)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        DB.NumberPlace]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Trans
                                (Sym (GHC.Types.N:IO[0]
                                          <[Database.Persist.Class.PersistEntity.Entity
                                              DB.NumberPlace]>_R))
                                (Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                          <GHC.Types.IO>_R) <[Database.Persist.Class.PersistEntity.Entity
                                                                DB.NumberPlace]>_N))
                      (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                                <[Database.Persist.Class.PersistEntity.Entity
                                    DB.NumberPlace]>_N)))) -}
81ff2a62f5866b46644438f52ec5d76f
  selectAllNP6 ::
    (Database.Persist.Class.PersistEntity.PersistEntity DB.NumberPlace,
     Database.Persist.Class.PersistEntity.PersistEntityBackend
       DB.NumberPlace
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Unfolding: ((DB.$fPersistEntityNumberPlace,
                  DB.selectAllNP7
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Class.PersistEntity.PersistEntityBackend
                                      DB.NumberPlace>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
a44f5a735d9f75bd3f63ecf9135b8720
  selectAllNP7 ::
    Database.Persist.Class.PersistEntity.PersistEntityBackend
      DB.NumberPlace
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.PersistEntityBackend
                        DB.NumberPlace)
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ (DB.D:R:PersistEntityBackendNumberPlace[0])) -}
e36c110c98b5c65c4d489372af039174
  selectAllNP_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity DB.NumberPlace)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ DB.NumberPlace
                   @ (Control.Monad.Trans.Resource.Internal.ResourceT
                        (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                   @ GHC.Types.IO
                   DB.selectAllNP6
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         DB.NumberPlace>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         <Database.Persist.Class.PersistEntity.PersistEntityBackend
                            DB.NumberPlace>_N
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   DB.$s$fMonadIOResourceT
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter DB.NumberPlace))
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           DB.NumberPlace))) -}
ed6e40600d14e9905f66997e128cf00c
  selectNP ::
    GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO [DB.NumberPlace]
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DB.selectNP1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[DB.NumberPlace]>_R)) -}
7b95ff150e12d0d684492ea1504b1cd1
  selectNP1 ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DB.NumberPlace] #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><S,U>,
     Unfolding: (\ (from :: GHC.Types.Int)
                   (to :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DB.selectNP2
                        `cast`
                      (Trans
                           (Control.Monad.Logger.N:NoLoggingT[0]
                                <GHC.Types.IO>_R <[Database.Persist.Class.PersistEntity.Entity
                                                     DB.NumberPlace]>_N)
                           (GHC.Types.N:IO[0]
                                <[Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case from of wild { GHC.Types.I# x ->
                    case to of wild1 { GHC.Types.I# x1 ->
                    let {
                      y :: GHC.Prim.Int# = GHC.Prim.+# x1 1#
                    } in
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 0#) of wild2 {
                      GHC.Types.False
                      -> case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<# 0# y) of wild3 {
                           GHC.Types.False
                           -> DB.$wunsafeDrop
                                @ DB.NumberPlace
                                x
                                (GHC.Types.[] @ DB.NumberPlace)
                           GHC.Types.True
                           -> DB.$wunsafeDrop @ DB.NumberPlace x (DB.$wgo ipv1 y) }
                      GHC.Types.True
                      -> case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<# 0# y) of wild3 {
                           GHC.Types.False -> GHC.Types.[] @ DB.NumberPlace
                           GHC.Types.True -> DB.$wgo ipv1 y } } } } #) }) -}
14bb9ac19fdb69cebcd97317dfd2a6b7
  selectNP2 ::
    Control.Monad.Logger.NoLoggingT
      GHC.Types.IO
      [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
  {- Unfolding: (Control.Monad.Trans.Resource.runResourceT
                   @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity DB.NumberPlace]
                   DB.$s$fMonadBaseControlbNoLoggingT
                   DB.selectAllNP3
                     `cast`
                   (Trans
                        (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <[Database.Persist.Class.PersistEntity.Entity
                                                DB.NumberPlace]>_R))
                                  (Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                            <GHC.Types.IO>_R) <[Database.Persist.Class.PersistEntity.Entity
                                                                  DB.NumberPlace]>_N))
                        (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                  <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      DB.NumberPlace]>_N)))) -}
226a992b37a5cd3dd3fbc0a697d4139d
  unNumberPlaceKey ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left DB.R:KeyNumberPlace
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                DB.unNumberPlaceKey1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key DB.NumberPlace>_R
                 ->_R Trans
                          (DB.D:R:KeyNumberPlace0[0]) (DB.N:R:KeyNumberPlace[0])) -}
226a992b37a5cd3dd3fbc0a697d4139d
  unNumberPlaceKey1 ::
    Database.Persist.Class.PersistEntity.Key DB.NumberPlace
    -> Database.Persist.Class.PersistEntity.Key DB.NumberPlace
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            DB.NumberPlace) ->
                 ds) -}
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = DB.$fEqKey
instance GHC.Classes.Eq [DB.NumberPlace] = DB.$fEqNumberPlace
instance Web.HttpApiData.Internal.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = DB.$fFromHttpApiDataKey
instance Data.Aeson.Types.Class.FromJSON [Database.Persist.Class.PersistEntity.Entity]
  = DB.$fFromJSONEntity
instance Data.Aeson.Types.Class.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = DB.$fFromJSONKey
instance Data.Aeson.Types.Class.FromJSON [DB.NumberPlace]
  = DB.$fFromJSONNumberPlace
instance GHC.Generics.Generic [DB.NumberPlace]
  = DB.$fGenericNumberPlace
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = DB.$fOrdKey
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = DB.$fPathPieceKey
instance Database.Persist.Class.PersistEntity.PersistEntity [DB.NumberPlace]
  = DB.$fPersistEntityNumberPlace
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = DB.$fPersistFieldKey
instance Database.Persist.Class.PersistField.PersistField [DB.NumberPlace]
  = DB.$fPersistFieldNumberPlace
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = DB.$fPersistFieldSqlKey
instance Database.Persist.Sql.Class.PersistFieldSql [DB.NumberPlace]
  = DB.$fPersistFieldSqlNumberPlace
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = DB.$fReadKey
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = DB.$fShowKey
instance GHC.Show.Show [DB.NumberPlace] = DB.$fShowNumberPlace
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           DB.NumberPlace]
  = DB.$fToBackendKeySqlBackendNumberPlace
instance Web.HttpApiData.Internal.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = DB.$fToHttpApiDataKey
instance Data.Aeson.Types.Class.ToJSON [Database.Persist.Class.PersistEntity.Entity]
  = DB.$fToJSONEntity
instance Data.Aeson.Types.Class.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = DB.$fToJSONKey
instance Data.Aeson.Types.Class.ToJSON [DB.NumberPlace]
  = DB.$fToJSONNumberPlace
family instance Database.Persist.Class.PersistEntity.EntityField [DB.NumberPlace]
  = DB.D:R:EntityFieldNumberPlacetyp0
family instance Database.Persist.Class.PersistEntity.Key [DB.NumberPlace]
  = DB.D:R:KeyNumberPlace0
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [DB.NumberPlace]
  = DB.D:R:PersistEntityBackendNumberPlace
family instance GHC.Generics.Rep [DB.NumberPlace]
  = DB.Rep_NumberPlace
family instance Database.Persist.Class.PersistEntity.Unique [DB.NumberPlace]
  = DB.D:R:UniqueNumberPlace0
"SPEC/DB $WNumberPlaceId @ (Key NumberPlace)" [ALWAYS] forall (dt :: Database.Persist.Class.PersistEntity.Key
                                                                       DB.NumberPlace
                                                                     Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                                                                            DB.NumberPlace)
  DB.$WNumberPlaceId @ (Database.Persist.Class.PersistEntity.Key
                          DB.NumberPlace)
                     dt
  = DB.$fPersistEntityNumberPlace_$s$WNumberPlaceId
"SPEC/DB $fApplicativeNoLoggingT @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                     GHC.Types.IO)
  Control.Monad.Logger.$fApplicativeNoLoggingT @ GHC.Types.IO $dMonad
  = DB.$s$fApplicativeNoLoggingT
"SPEC/DB $fApplicativeResourceT @ (NoLoggingT IO)" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ (Control.Monad.Logger.NoLoggingT
                                                                    GHC.Types.IO)
                                                               $dApplicative
  = DB.$s$fApplicativeResourceT
"SPEC/DB $fApplicativeResourceT_$cp1Applicative @ (NoLoggingT IO)" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cp1Applicative @ (Control.Monad.Logger.NoLoggingT
                                                                                    GHC.Types.IO)
                                                                               $dApplicative
  = DB.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cp1Applicative
"SPEC/DB $fApplicativeResourceT_$cpure @ (NoLoggingT IO)" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                              (Control.Monad.Logger.NoLoggingT
                                                                                                 GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT_$cpure @ (Control.Monad.Logger.NoLoggingT
                                                                           GHC.Types.IO)
                                                                      $dApplicative
  = DB.$s$fApplicativeResourceT_$s$fApplicativeResourceT_$cpure
"SPEC/DB $fEq[] @ [Int]" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                    [GHC.Types.Int])
  GHC.Classes.$fEq[] @ [GHC.Types.Int] $dEq
  = DB.$fEqNumberPlace_$s$fEq[]
"SPEC/DB $fEq[]_$c/= @ [Int]" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                         [GHC.Types.Int])
  GHC.Classes.$fEq[]_$c/= @ [GHC.Types.Int] $dEq
  = DB.$fEqNumberPlace_$s$fEq[]_$c/=
"SPEC/DB $fFunctorNoLoggingT @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                 GHC.Types.IO)
  Control.Monad.Logger.$fFunctorNoLoggingT @ GHC.Types.IO $dMonad
  = DB.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT
"SPEC/DB $fFunctorResourceT @ (NoLoggingT IO)" [ALWAYS] forall ($dFunctor :: GHC.Base.Functor
                                                                               (Control.Monad.Logger.NoLoggingT
                                                                                  GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ (Control.Monad.Logger.NoLoggingT
                                                                GHC.Types.IO)
                                                           $dFunctor
  = DB.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/DB $fMonadBaseControlbNoLoggingT @ IO @ IO" [ALWAYS] forall ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                           GHC.Types.IO
                                                                                           GHC.Types.IO)
  Control.Monad.Logger.$fMonadBaseControlbNoLoggingT @ GHC.Types.IO
                                                     @ GHC.Types.IO
                                                     $dMonadBaseControl
  = DB.$s$fMonadBaseControlbNoLoggingT
"SPEC/DB $fMonadBaseControlbNoLoggingT_$cp1MonadBaseControl @ IO @ IO" [ALWAYS] forall ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                                GHC.Types.IO
                                                                                                                GHC.Types.IO)
  Control.Monad.Logger.$fMonadBaseControlbNoLoggingT_$cp1MonadBaseControl @ GHC.Types.IO
                                                                          @ GHC.Types.IO
                                                                          $dMonadBaseControl
  = DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBaseControlbNoLoggingT_$cp1MonadBaseControl
"SPEC/DB $fMonadBaseControlbResourceT @ IO @ (NoLoggingT IO)" [ALWAYS] forall ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                       GHC.Types.IO
                                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadBaseControlbResourceT @ GHC.Types.IO
                                                                     @ (Control.Monad.Logger.NoLoggingT
                                                                          GHC.Types.IO)
                                                                     $dMonadBaseControl
  = DB.$s$fMonadBaseControlbResourceT
"SPEC/DB $fMonadBaseControlbResourceT_$cp1MonadBaseControl @ IO @ (NoLoggingT
                                                                    IO)" [ALWAYS] forall ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                                                                                                                GHC.Types.IO
                                                                                                                                                                                                (Control.Monad.Logger.NoLoggingT
                                                                                                                                                                                                   GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadBaseControlbResourceT_$cp1MonadBaseControl @ GHC.Types.IO
                                                                                          @ (Control.Monad.Logger.NoLoggingT
                                                                                               GHC.Types.IO)
                                                                                          $dMonadBaseControl
  = DB.$s$fMonadBaseControlbResourceT_$s$fMonadBaseControlbResourceT_$cp1MonadBaseControl
"SPEC/DB $fMonadBasebNoLoggingT @ IO @ IO" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                             GHC.Types.IO
                                                                             GHC.Types.IO)
  Control.Monad.Logger.$fMonadBasebNoLoggingT @ GHC.Types.IO
                                              @ GHC.Types.IO
                                              $dMonadBase
  = DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT
"SPEC/DB $fMonadBasebNoLoggingT_$cp2MonadBase @ IO @ IO" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                           GHC.Types.IO
                                                                                           GHC.Types.IO)
  Control.Monad.Logger.$fMonadBasebNoLoggingT_$cp2MonadBase @ GHC.Types.IO
                                                            @ GHC.Types.IO
                                                            $dMonadBase
  = DB.$s$fApplicativeResourceT_$s$fMonadBasebNoLoggingT_$cp2MonadBase
"SPEC/DB $fMonadBasebNoLoggingT_$cp4MonadBase @ IO @ IO" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                           GHC.Types.IO
                                                                                           GHC.Types.IO)
  Control.Monad.Logger.$fMonadBasebNoLoggingT_$cp4MonadBase @ GHC.Types.IO
                                                            @ GHC.Types.IO
                                                            $dMonadBase
  = DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadBasebNoLoggingT_$cp4MonadBase
"SPEC/DB $fMonadBasebResourceT @ IO @ (NoLoggingT IO)" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                         GHC.Types.IO
                                                                                         (Control.Monad.Logger.NoLoggingT
                                                                                            GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadBasebResourceT @ GHC.Types.IO
                                                              @ (Control.Monad.Logger.NoLoggingT
                                                                   GHC.Types.IO)
                                                              $dMonadBase
  = DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT
"SPEC/DB $fMonadBasebResourceT_$cp2MonadBase @ IO @ (NoLoggingT IO)" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                       GHC.Types.IO
                                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadBasebResourceT_$cp2MonadBase @ GHC.Types.IO
                                                                            @ (Control.Monad.Logger.NoLoggingT
                                                                                 GHC.Types.IO)
                                                                            $dMonadBase
  = DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp2MonadBase
"SPEC/DB $fMonadBasebResourceT_$cp4MonadBase @ IO @ (NoLoggingT IO)" [ALWAYS] forall ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                       GHC.Types.IO
                                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadBasebResourceT_$cp4MonadBase @ GHC.Types.IO
                                                                            @ (Control.Monad.Logger.NoLoggingT
                                                                                 GHC.Types.IO)
                                                                            $dMonadBase
  = DB.$s$fMonadBaseControlbResourceT_$s$fMonadBasebResourceT_$cp4MonadBase
"SPEC/DB $fMonadIOResourceT @ (NoLoggingT IO)" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                               (Control.Monad.Logger.NoLoggingT
                                                                                  GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ (Control.Monad.Logger.NoLoggingT
                                                                GHC.Types.IO)
                                                           $dMonadIO
  = DB.$s$fMonadIOResourceT
"SPEC/DB $fMonadIOResourceT_$cliftIO @ (NoLoggingT IO)" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                        (Control.Monad.Logger.NoLoggingT
                                                                                           GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ (Control.Monad.Logger.NoLoggingT
                                                                         GHC.Types.IO)
                                                                    $dMonadIO
  = DB.$s$fMonadBaseControlbResourceT_$s$fMonadIOResourceT_$cliftIO
"SPEC/DB $fMonadLoggerResourceT @ (NoLoggingT IO)" [ALWAYS] forall ($dMonadLogger :: Control.Monad.Logger.MonadLogger
                                                                                       (Control.Monad.Logger.NoLoggingT
                                                                                          GHC.Types.IO))
  Control.Monad.Logger.$fMonadLoggerResourceT @ (Control.Monad.Logger.NoLoggingT
                                                   GHC.Types.IO)
                                              $dMonadLogger
  = DB.$s$fMonadLoggerResourceT
"SPEC/DB $fMonadLoggerResourceT_$cmonadLoggerLog @ (NoLoggingT IO)" [ALWAYS] forall ($dMonadLogger :: Control.Monad.Logger.MonadLogger
                                                                                                        (Control.Monad.Logger.NoLoggingT
                                                                                                           GHC.Types.IO))
  Control.Monad.Logger.$fMonadLoggerResourceT_$cmonadLoggerLog @ (Control.Monad.Logger.NoLoggingT
                                                                    GHC.Types.IO)
                                                               $dMonadLogger
  = DB.$s$fMonadLoggerResourceT_$s$fMonadLoggerResourceT_$cmonadLoggerLog
"SPEC/DB $fMonadNoLoggingT @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                               GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT @ GHC.Types.IO $dMonad
  = DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT
"SPEC/DB $fMonadNoLoggingT_$c>> @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                    GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT_$c>> @ GHC.Types.IO $dMonad
  = DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT_$c>>
"SPEC/DB $fMonadNoLoggingT_$cfail @ IO" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                      GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT_$cfail @ GHC.Types.IO
                                                $dMonad
  = DB.$s$fMonadBaseControlbNoLoggingT_$s$fMonadNoLoggingT_$cfail
"SPEC/DB $fMonadResourceT @ (NoLoggingT IO)" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                           (Control.Monad.Logger.NoLoggingT
                                                                              GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ (Control.Monad.Logger.NoLoggingT
                                                              GHC.Types.IO)
                                                         $dMonad
  = DB.$s$fMonadBaseControlbResourceT_$s$fMonadResourceT
"SPEC/DB $fMonadResourceT_$cfail @ (NoLoggingT IO)" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                                  (Control.Monad.Logger.NoLoggingT
                                                                                     GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$cfail @ (Control.Monad.Logger.NoLoggingT
                                                                     GHC.Types.IO)
                                                                $dMonad
  = DB.$s$fMonadBaseControlbResourceT_$s$fMonadResourceT_$cfail
"SPEC/DB $fPersistField[] @ Int" [ALWAYS] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                      GHC.Types.Int)
  Database.Persist.Class.PersistField.$fPersistField[] @ GHC.Types.Int
                                                       $dPersistField
  = DB.$fPersistEntityNumberPlace_$s$fPersistField[]2
"SPEC/DB $fPersistField[] @ [Int]" [ALWAYS] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                        [GHC.Types.Int])
  Database.Persist.Class.PersistField.$fPersistField[] @ [GHC.Types.Int]
                                                       $dPersistField
  = DB.$fPersistEntityNumberPlace_$s$fPersistField[]1
"SPEC/DB $fPersistField[] @ [[Int]]" [ALWAYS] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                          [[GHC.Types.Int]])
  Database.Persist.Class.PersistField.$fPersistField[] @ [[GHC.Types.Int]]
                                                       $dPersistField
  = DB.$fPersistEntityNumberPlace_$s$fPersistField[]
"SPEC/DB $fPersistField[]_$ctoPersistValue @ Int" [ALWAYS] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                                       GHC.Types.Int)
  Database.Persist.Class.PersistField.$fPersistField[]_$ctoPersistValue @ GHC.Types.Int
                                                                        $dPersistField
  = DB.$fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue
"SPEC/DB $fPersistField[]_$ctoPersistValue @ [Int]" [ALWAYS] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                                         [GHC.Types.Int])
  Database.Persist.Class.PersistField.$fPersistField[]_$ctoPersistValue @ [GHC.Types.Int]
                                                                        $dPersistField
  = DB.$fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue1
"SPEC/DB $fPersistField[]_$ctoPersistValue @ [[Int]]" [ALWAYS] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                                           [[GHC.Types.Int]])
  Database.Persist.Class.PersistField.$fPersistField[]_$ctoPersistValue @ [[GHC.Types.Int]]
                                                                        $dPersistField
  = DB.$fPersistEntityNumberPlace_$s$fPersistField[]_$ctoPersistValue2
"SPEC/DB fromList @ Text _" [ALWAYS] forall @ a
                                            ($dOrd :: GHC.Classes.Ord Data.Text.Internal.Text)
  Data.Map.Base.fromList @ Data.Text.Internal.Text @ a $dOrd
  = DB.$fPersistEntityNumberPlace_$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

