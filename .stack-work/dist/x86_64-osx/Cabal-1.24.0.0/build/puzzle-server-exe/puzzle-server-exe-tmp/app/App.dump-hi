
==================== FINAL INTERFACE ====================
2017-01-18 05:02:10.695234 UTC

interface main@main:App 8001
  interface hash: 57bdc25200000ab16f96a1a0a6de9f9b
  ABI hash: 7151b7278a303575ce1cd9e4c96b94d0
  export-list hash: 08667357fae93c8ca7a06f4285b355a1
  orphan hash: 8174c6fd66aa31bbf0588c0096eb3a0b
  flag hash: 4402713daf0d1adc16f363130ffc0ff4
  sig of: Nothing
  used TH splices: False
  where
exports:
  App.loged
  App.startApp
module dependencies: BoardModel DB Helper NumberPlace Parser
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl
                      aeson-compat-0.3.6@aeson-compat-0.3.6-E41ehkTzXoOGdiPpKt9DSo
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.0@async-2.1.0-J6Pl8k3L4PKGEpjYdgwiIf
                      attoparsec-0.13.0.2@attoparsec-0.13.0.2-GLM6q4XQBSiI4fJOXoBxlu
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-5dPoF8dzhwzBaEB2MvnmIS
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D
                      blaze-textual-0.2.1.0@blaze-textual-0.2.1.0-5TvXaG25I6S46sBk67LFXf
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      conduit-1.2.7@conduit-1.2.7-AT81Epeipx6C4wqHn3FXor
                      conduit-extra-1.1.13.2@conduit-extra-1.1.13.2-HFYphC0EojhHqAnIEx6Pp5
                      containers-0.5.7.1@containers-0.5.7.1
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-bAUkz2rC2kFhBbPjw2Of5
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      fast-logger-2.4.6@fast-logger-2.4.6-HRSjyxgqsD189veq1dYWk7
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      http-api-data-0.2.4@http-api-data-0.2.4-3jwS7OrPl3l4oJfG3gRZ5C
                      http-date-0.0.6.1@http-date-0.0.6.1-HSASl0QeK5w66Hqarih2YS
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-FAbjmjQAybhLjdn6FTjXH8 integer-gmp-1.0.0.1
                      iproute-1.7.0@iproute-1.7.0-4hrNfIw4x4X9bTMpN4TYsS
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      mmorph-1.0.6@mmorph-1.0.6-3xsw6wg6Vs2JmwrJVsaYA0
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      monad-logger-0.3.19@monad-logger-0.3.19-3KRgH6CniDbKll7yTf1WEI
                      monad-loops-0.4.3@monad-loops-0.4.3-1xZFtRVMQPC4X8bjTBWqNi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      mysql-0.1.4@mysql-0.1.4-DimPIfooGGHJabUPWkGGxx
                      mysql-simple-0.4.0.0@mysql-simple-0.4.0.0-F3ihRMN9bUm2a7nW34P6dx
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      path-pieces-0.2.1@path-pieces-0.2.1-EQ6YdjSujhVE8ECatsqK1q
                      pcre-light-0.4.0.4@pcre-light-0.4.0.4-IQAaYrFkWFB49U9V8o5b8j
                      persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ
                      persistent-mysql-2.6@persistent-mysql-2.6-D4rn3O1h40BIaXYsqp0jgs
                      persistent-template-2.5.1.6@persistent-template-2.5.1.6-8iRn3xUlWkU9lhfp8lf0UX
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      psqueues-0.2.2.2@psqueues-0.2.2.2-Abmw1tivvf7JJikDhHX0px
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      regex-base-0.93.2@regex-base-0.93.2-4lnOy3Rb1yfISFVEXVfJuH
                      regex-compat-0.95.1@regex-compat-0.95.1-JPDhOGKcrkD8S1t3VsLLUt
                      regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-9vTgJsy3ECMB5KkdzRIRAh
                      resourcet-1.1.7.5@resourcet-1.1.7.5-Gsc14LtMBpp2sQtbjwGHLc
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      scotty-0.11.0@scotty-0.11.0-K3glQ9UkP7T5UQktbiCBkm
                      silently-1.2.5@silently-1.2.5-Ek776fxSdtm4h8aXqt6CNw
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-4lLWE8CZnvmDZJW5bKkus1
                      streaming-commons-0.1.15.5@streaming-commons-0.1.15.5-JQkoaJB2sOVLY7vO4kOB5z
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-KFZuUgmBRr4GSrTHv7XvSl
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.2.0@unix-compat-0.4.2.0-GNHotEMWE5dJ4oYFhgibIV
                      unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-extra-3.0.17@wai-extra-3.0.17-2MlAJkM0Sn6EbktF1Dv0RA
                      warp-3.2.8@warp-3.2.8-2jzAO2vdG83210AWVk4b4g
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
orphans: aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-7upVB3k6XZaETFQEHHKnl:Data.Aeson.Types.Instances
         attoparsec-0.13.0.2@attoparsec-0.13.0.2-GLM6q4XQBSiI4fJOXoBxlu:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.2@attoparsec-0.13.0.2-GLM6q4XQBSiI4fJOXoBxlu:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.1.6@persistent-template-2.5.1.6-8iRn3xUlWkU9lhfp8lf0UX:Database.Persist.TH
         regex-base-0.93.2@regex-base-0.93.2-4lnOy3Rb1yfISFVEXVfJuH:Text.Regex.Base.Context
         regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex-posix-0.95.2-Fy6xYMm8dnjHHt23b8RdmR:Text.Regex.Posix.String
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.2@attoparsec-0.13.0.2-GLM6q4XQBSiI4fJOXoBxlu:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         iproute-1.7.0@iproute-1.7.0-4hrNfIw4x4X9bTMpN4TYsS:Data.IP.Addr
                         iproute-1.7.0@iproute-1.7.0-4hrNfIw4x4X9bTMpN4TYsS:Data.IP.Range
                         main@main:BoardModel main@main:DB
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         monad-logger-0.3.19@monad-logger-0.3.19-3KRgH6CniDbKll7yTf1WEI:Control.Monad.Logger
                         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Class.PersistConfig
                         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6@persistent-2.6-K8vKePxqYMYCHnPZAeFsgJ:Database.Persist.Sql.Types.Internal
                         persistent-mysql-2.6@persistent-mysql-2.6-D4rn3O1h40BIaXYsqp0jgs:Database.Persist.MySQL
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.7.5@resourcet-1.1.7.5-Gsc14LtMBpp2sQtbjwGHLc:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.0@scotty-0.11.0-K3glQ9UkP7T5UQktbiCBkm:Web.Scotty.Internal.Types
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  base-4.9.0.0:Control.Applicative 7728b33d6969dce59e89474349eb1397
import  -/  base-4.9.0.0:Control.Monad.IO.Class d702028d883e700bd7066b031147030d
import  -/  base-4.9.0.0:Data.Monoid 1efae021212a10c79fd75960dc0a1d99
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal 96a214b84fd13ce168aecf88c70c8f1b
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Lazy.Internal f0df474bf1747957504b03d816c8df3d
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  Helper 26e1b0b07c9998829b0028390d7eccd3
  exports: c615c1469b95e6b06f96703f7f6b879c
  getAllNp b0d041bbb748a829e2129d69ccbea6e3
  getSelectNp e880babff4dc4651fe49364d43d4ad0b
  handleNP 3e6806f13cb83361f31975198fb71aa6
import  -/  scotty-0.11.0@scotty-0.11.0-K3glQ9UkP7T5UQktbiCBkm:Web.Scotty 4ed632909451f47b25a3ba82a906c963
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Internal.Lazy ec7ab5010888c27070f8bcec247ee746
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy f186ae58bc5c347866d45b38531e12a0
import  -/  wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW:Network.Wai d1b73469fdcbc6b9af0b9cdf32c02363
import  -/  wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW:Network.Wai.Internal 53e5ee12b2fc783f5b88d407bd808cf7
96394510159a0caa531431fb3db20991
  $s$fParsable[] :: Web.Scotty.Action.Parsable [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  Web.Scotty.Action.$fParsableChar_$cparseParamList
                  (Web.Scotty.Action.$fParsable[]_$cparseParamList
                     @ GHC.Types.Char
                     Web.Scotty.Action.$fParsableChar) -}
5bb0a7fc26d179bf399ba40b28aea150
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module App.$trModule2 App.$trModule1) -}
c6d1cf7264d4d24400f4bea08d41c2a8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "App"#) -}
e688567075883b18931b9ba7baddc175
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
c8dabba9752871ce8509ba57ff96f953
  loged :: Network.Wai.Internal.Request -> GHC.Types.IO ()
  {- Arity: 2,
     Strictness: <L,U(1*U(U,U,U,U),1*U(U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*C1(U(U,1*U(U,U,U,U))),A,1*U,1*U,1*U,1*U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                App.loged1
                  `cast`
                (<Network.Wai.Internal.Request>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
58abe1887ca12e58929979d49f1971a2
  loged1 ::
    Network.Wai.Internal.Request
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2,
     Strictness: <L,U(1*U(U,U,U,U),1*U(U,U),1*U(U,U,U,U),1*U(U,U,U,U),1*U,1*U,1*U,1*U,1*U,1*C1(U(U,1*U(U,U,U,U))),A,1*U,1*U,1*U,1*U,1*U)><S,U> -}
edb1d1696197dd5fa5cd2f80d6c7c3ac
  startApp :: GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Trans.scottyOptsT
                   @ GHC.Types.IO
                   @ GHC.Types.IO
                   @ Data.Text.Internal.Lazy.Text
                   GHC.Base.$fMonadIO
                   Control.Monad.IO.Class.$fMonadIOIO
                   App.startApp17
                   (GHC.Base.id @ (GHC.Types.IO Network.Wai.Internal.Response))
                   App.startApp1
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                  <Web.Scotty.Internal.Types.ScottyState
                                     Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                  <Data.Functor.Identity.Identity>_R
                                  <()>_N))
                        (Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                  <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N) <()>_N))) -}
1ef042b73182b202d217e4529079a9b8
  startApp1 ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> Data.Functor.Identity.Identity
         ((),
          Web.Scotty.Internal.Types.ScottyState
            Data.Text.Internal.Lazy.Text GHC.Types.IO)
  {- Arity: 1,
     Unfolding: (\ (s1 :: Web.Scotty.Internal.Types.ScottyState
                            Data.Text.Internal.Lazy.Text GHC.Types.IO)[OneShot] ->
                 (App.startApp16
                    Network.HTTP.Types.Method.GET
                    App.startApp13
                    App.startApp11
                      `cast`
                    (Trans
                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <Web.Scotty.Internal.Types.ActionEnv>_R
                                   <Control.Monad.Trans.State.Lazy.StateT
                                      Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                   <Data.Either.Either
                                      (Web.Scotty.Internal.Types.ActionError
                                         Data.Text.Internal.Lazy.Text)
                                      ()>_N))
                         (Trans
                              (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                        <Web.Scotty.Internal.Types.ActionError
                                           Data.Text.Internal.Lazy.Text>_N
                                        <Control.Monad.Trans.Reader.ReaderT
                                           Web.Scotty.Internal.Types.ActionEnv
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Web.Scotty.Internal.Types.ScottyResponse
                                              GHC.Types.IO)>_R
                                        <()>_N))
                              (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                        <Data.Text.Internal.Lazy.Text>_N
                                        <GHC.Types.IO>_R) <()>_N))))
                   `cast`
                 (Trans
                      (Web.Scotty.Internal.Types.N:ScottyT[0]
                           <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N <()>_N)
                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                           <Web.Scotty.Internal.Types.ScottyState
                              Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                           <Data.Functor.Identity.Identity>_R
                           <()>_N))
                   (case ((App.startApp16
                             Network.HTTP.Types.Method.GET
                             App.startApp8
                             App.startApp6
                               `cast`
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                            <*>_N
                                            <Web.Scotty.Internal.Types.ActionEnv>_R
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Web.Scotty.Internal.Types.ScottyResponse
                                               GHC.Types.IO>_R
                                            <Data.Either.Either
                                               (Web.Scotty.Internal.Types.ActionError
                                                  Data.Text.Internal.Lazy.Text)
                                               ()>_N))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Web.Scotty.Internal.Types.ActionError
                                                    Data.Text.Internal.Lazy.Text>_N
                                                 <Control.Monad.Trans.Reader.ReaderT
                                                    Web.Scotty.Internal.Types.ActionEnv
                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                       Web.Scotty.Internal.Types.ScottyResponse
                                                       GHC.Types.IO)>_R
                                                 <()>_N))
                                       (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                 <Data.Text.Internal.Lazy.Text>_N
                                                 <GHC.Types.IO>_R) <()>_N))))
                            `cast`
                          (Trans
                               (Web.Scotty.Internal.Types.N:ScottyT[0]
                                    <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N <()>_N)
                               (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <Web.Scotty.Internal.Types.ScottyState
                                       Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                    <Data.Functor.Identity.Identity>_R
                                    <()>_N))
                            (case ((App.startApp16
                                      Network.HTTP.Types.Method.POST
                                      App.startApp3
                                      App.startApp2
                                        `cast`
                                      (Trans
                                           (<Web.Scotty.Internal.Types.ActionEnv>_R
                                            ->_R Trans
                                                     (<Web.Scotty.Internal.Types.ScottyResponse>_R
                                                      ->_R Sym (GHC.Types.N:IO[0]
                                                                    <(Data.Either.Either
                                                                        (Web.Scotty.Internal.Types.ActionError
                                                                           Data.Text.Internal.Lazy.Text)
                                                                        (),
                                                                      Web.Scotty.Internal.Types.ScottyResponse)>_R))
                                                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                               <Web.Scotty.Internal.Types.ScottyResponse>_N
                                                               <GHC.Types.IO>_R
                                                               <Data.Either.Either
                                                                  (Web.Scotty.Internal.Types.ActionError
                                                                     Data.Text.Internal.Lazy.Text)
                                                                  ()>_N)))
                                           (Trans
                                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <*>_N
                                                          <Web.Scotty.Internal.Types.ActionEnv>_R
                                                          <Control.Monad.Trans.State.Lazy.StateT
                                                             Web.Scotty.Internal.Types.ScottyResponse
                                                             GHC.Types.IO>_R
                                                          <Data.Either.Either
                                                             (Web.Scotty.Internal.Types.ActionError
                                                                Data.Text.Internal.Lazy.Text)
                                                             ()>_N))
                                                (Trans
                                                     (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                               <Web.Scotty.Internal.Types.ActionError
                                                                  Data.Text.Internal.Lazy.Text>_N
                                                               <Control.Monad.Trans.Reader.ReaderT
                                                                  Web.Scotty.Internal.Types.ActionEnv
                                                                  (Control.Monad.Trans.State.Lazy.StateT
                                                                     Web.Scotty.Internal.Types.ScottyResponse
                                                                     GHC.Types.IO)>_R
                                                               <()>_N))
                                                     (Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                               <Data.Text.Internal.Lazy.Text>_N
                                                               <GHC.Types.IO>_R) <()>_N)))))
                                     `cast`
                                   (Trans
                                        (Web.Scotty.Internal.Types.N:ScottyT[0]
                                             <Data.Text.Internal.Lazy.Text>_N
                                             <GHC.Types.IO>_N <()>_N)
                                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                             <Web.Scotty.Internal.Types.ScottyState
                                                Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                             <Data.Functor.Identity.Identity>_R
                                             <()>_N))
                                     s1)
                                    `cast`
                                  (Data.Functor.Identity.N:Identity[0]
                                       <((),
                                         Web.Scotty.Internal.Types.ScottyState
                                           Data.Text.Internal.Lazy.Text
                                           GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                             s' }))
                           `cast`
                         (Data.Functor.Identity.N:Identity[0]
                              <((),
                                Web.Scotty.Internal.Types.ScottyState
                                  Data.Text.Internal.Lazy.Text
                                  GHC.Types.IO)>_R) of wild { (,) a1 s' ->
                    s' })) -}
d8a74c148e4dddc4e80b944d9080448e
  startApp10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/number_places"#) -}
1dd5573b2c959265c7eaa0cd88c47a46
  startApp11 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1,
     Unfolding: (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 let {
                   m1 :: Control.Monad.Trans.State.Lazy.StateT
                           Web.Scotty.Internal.Types.ScottyResponse
                           GHC.Types.IO
                           (Data.Either.Either
                              (Web.Scotty.Internal.Types.ActionError
                                 Data.Text.Internal.Lazy.Text)
                              GHC.Base.String)
                   = App.startApp_w2
                       `cast`
                     (Trans
                          (Web.Scotty.Internal.Types.N:ActionT[0]
                               <Data.Text.Internal.Lazy.Text>_N
                               <GHC.Types.IO>_R <GHC.Base.String>_N)
                          (Trans
                               (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Web.Scotty.Internal.Types.ActionError
                                       Data.Text.Internal.Lazy.Text>_N
                                    <Control.Monad.Trans.Reader.ReaderT
                                       Web.Scotty.Internal.Types.ActionEnv
                                       (Control.Monad.Trans.State.Lazy.StateT
                                          Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO)>_R
                                    <GHC.Base.String>_N)
                               (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Web.Scotty.Internal.Types.ActionEnv>_R
                                    <Control.Monad.Trans.State.Lazy.StateT
                                       Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                    <Data.Either.Either
                                       (Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text)
                                       GHC.Base.String>_N)))
                       w4
                 } in
                 (\ (s1 :: Web.Scotty.Internal.Types.ScottyResponse)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                             <GHC.Types.IO>_R
                             <Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                GHC.Base.String>_N)
                          s1)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                GHC.Base.String,
                              Web.Scotty.Internal.Types.ScottyResponse)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,) a1 s' ->
                  case a1 of wild1 {
                    Data.Either.Left e1
                    -> (# ipv,
                          (Data.Either.Left
                             @ (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                             @ ()
                             e1,
                           s') #)
                    Data.Either.Right x
                    -> case (((Web.Scotty.Internal.Types.$w$cliftIO
                                 @ Data.Text.Internal.Lazy.Text
                                 @ GHC.Types.IO
                                 Control.Monad.IO.Class.$fMonadIOIO
                                 @ BoardModel.NumberPlaces
                                 (Helper.getSelectNp1 x)
                                   `cast`
                                 (Sym (GHC.Types.N:IO[0] <BoardModel.NumberPlaces>_R)))
                                `cast`
                              (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <Web.Scotty.Internal.Types.ActionEnv>_R
                                   <Control.Monad.Trans.State.Lazy.StateT
                                      Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                   <Data.Either.Either
                                      (Web.Scotty.Internal.Types.ActionError
                                         Data.Text.Internal.Lazy.Text)
                                      BoardModel.NumberPlaces>_N)
                                w4)
                               `cast`
                             (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                  <Web.Scotty.Internal.Types.ScottyResponse>_N
                                  <GHC.Types.IO>_R
                                  <Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     BoardModel.NumberPlaces>_N)
                               s')
                              `cast`
                            (GHC.Types.N:IO[0]
                                 <(Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     BoardModel.NumberPlaces,
                                   Web.Scotty.Internal.Types.ScottyResponse)>_R)
                              ipv of ds2 { (#,#) ipv2 ipv3 ->
                       case ipv3 of wild2 { (,) a2 s'1 ->
                       case a2 of wild3 {
                         Data.Either.Left e1
                         -> (# ipv2,
                               (Data.Either.Left
                                  @ (Web.Scotty.Internal.Types.ActionError
                                       Data.Text.Internal.Lazy.Text)
                                  @ ()
                                  e1,
                                s'1) #)
                         Data.Either.Right x1
                         -> (((Web.Scotty.Action.$wjson
                                 @ BoardModel.NumberPlaces
                                 @ Data.Text.Internal.Lazy.Text
                                 @ GHC.Types.IO
                                 BoardModel.$fToJSONNumberPlaces
                                 GHC.Base.$fMonadIO
                                 x1)
                                `cast`
                              (Trans
                                   (Web.Scotty.Internal.Types.N:ActionT[0]
                                        <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_R <()>_N)
                                   (Trans
                                        (Control.Monad.Trans.Except.N:ExceptT[0]
                                             <Web.Scotty.Internal.Types.ActionError
                                                Data.Text.Internal.Lazy.Text>_N
                                             <Control.Monad.Trans.Reader.ReaderT
                                                Web.Scotty.Internal.Types.ActionEnv
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Web.Scotty.Internal.Types.ScottyResponse
                                                   GHC.Types.IO)>_R
                                             <()>_N)
                                        (Control.Monad.Trans.Reader.N:ReaderT[0]
                                             <*>_N
                                             <Web.Scotty.Internal.Types.ActionEnv>_R
                                             <Control.Monad.Trans.State.Lazy.StateT
                                                Web.Scotty.Internal.Types.ScottyResponse
                                                GHC.Types.IO>_R
                                             <Data.Either.Either
                                                (Web.Scotty.Internal.Types.ActionError
                                                   Data.Text.Internal.Lazy.Text)
                                                ()>_N)))
                                w4)
                               `cast`
                             (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                  <Web.Scotty.Internal.Types.ScottyResponse>_N
                                  <GHC.Types.IO>_R
                                  <Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     ()>_N)
                               s'1)
                              `cast`
                            (GHC.Types.N:IO[0]
                                 <(Data.Either.Either
                                     (Web.Scotty.Internal.Types.ActionError
                                        Data.Text.Internal.Lazy.Text)
                                     (),
                                   Web.Scotty.Internal.Types.ScottyResponse)>_R)
                              ipv2 } } } } } })
                   `cast`
                 (Trans
                      (<Web.Scotty.Internal.Types.ScottyResponse>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Data.Either.Either
                                         (Web.Scotty.Internal.Types.ActionError
                                            Data.Text.Internal.Lazy.Text)
                                         (),
                                       Web.Scotty.Internal.Types.ScottyResponse)>_R))
                      (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                <Web.Scotty.Internal.Types.ScottyResponse>_N
                                <GHC.Types.IO>_R
                                <Data.Either.Either
                                   (Web.Scotty.Internal.Types.ActionError
                                      Data.Text.Internal.Lazy.Text)
                                   ()>_N)))) -}
3bd7321f522c58e18f6ba14217b616da
  startApp12 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (Data.Text.Lazy.unpackCString# "page"#) -}
104d8c4e84389b2c47a6c62895bed27b
  startApp13 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture App.startApp14) -}
8776c711933fbf721e2d9cc1ca2490f0
  startApp14 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        App.startApp15 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
510944500a17b40f0d6b33c2961dd72f
  startApp15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "/number_place/:page"#) -}
b081a6091da582802f3f7ecbbf5568e0
  startApp16 ::
    Network.HTTP.Types.Method.StdMethod
    -> Web.Scotty.Internal.Types.RoutePattern
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
    -> Web.Scotty.Internal.Types.ScottyT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Route.addroute
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   Control.Monad.IO.Class.$fMonadIOIO) -}
10c7a9639e1d3de134284076e1ff5e41
  startApp17 :: Web.Scotty.Internal.Types.Options
  {- Unfolding: (Web.Scotty.Internal.Types.Options
                   Web.Scotty.Internal.Types.$fDefaultOptions3
                   App.startApp18) -}
a64bdf0dd1dbb87049655adf7e88cc01
  startApp18 :: Network.Wai.Handler.Warp.Settings.Settings
  {- Unfolding: (Network.Wai.Handler.Warp.Settings.Settings
                   App.startApp19
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Web.Scotty.Internal.Types.$fDefaultOptions2
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
abcf6d2259716bdcf15c5b3583fa27c9
  startApp19 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3000#) -}
a487631a009a7c6bd846f0a538f03951
  startApp2 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Web.Scotty.Internal.Types.ScottyResponse
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Either.Either
             (Web.Scotty.Internal.Types.ActionError
                Data.Text.Internal.Lazy.Text)
             (),
           Web.Scotty.Internal.Types.ScottyResponse) #)
  {- Arity: 3,
     Unfolding: (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv)
                   (eta :: Web.Scotty.Internal.Types.ScottyResponse)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (((Web.Scotty.Internal.Types.$w$cliftIO
                           @ Data.Text.Internal.Lazy.Text
                           @ GHC.Types.IO
                           Control.Monad.IO.Class.$fMonadIOIO
                           @ Data.ByteString.Internal.ByteString
                           (case w4 of wild2 { Web.Scotty.Internal.Types.Env ds1 ds2 ds3 ds4 ds5 ->
                            case ds1 of wild { Network.Wai.Internal.Request ds7 ds8 ds9 ds10 ds11 ds6 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ->
                            ds15 } }))
                          `cast`
                        (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Web.Scotty.Internal.Types.ActionEnv>_R
                             <Control.Monad.Trans.State.Lazy.StateT
                                Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                             <Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                Data.ByteString.Internal.ByteString>_N)
                          w4)
                         `cast`
                       (Control.Monad.Trans.State.Lazy.N:StateT[0]
                            <Web.Scotty.Internal.Types.ScottyResponse>_N
                            <GHC.Types.IO>_R
                            <Data.Either.Either
                               (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                               Data.ByteString.Internal.ByteString>_N)
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Data.Either.Either
                               (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                               Data.ByteString.Internal.ByteString,
                             Web.Scotty.Internal.Types.ScottyResponse)>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) a1 s' ->
                 case a1 of wild1 {
                   Data.Either.Left e1
                   -> (# ipv,
                         (Data.Either.Left
                            @ (Web.Scotty.Internal.Types.ActionError
                                 Data.Text.Internal.Lazy.Text)
                            @ ()
                            e1,
                          s') #)
                   Data.Either.Right x
                   -> case (Web.Scotty.Action.$wbody
                              @ Data.Text.Internal.Lazy.Text
                              @ GHC.Types.IO
                              Control.Monad.IO.Class.$fMonadIOIO
                              w4
                              s')
                             `cast`
                           (GHC.Types.N:IO[0]
                                <(Data.Either.Either
                                    (Web.Scotty.Internal.Types.ActionError
                                       Data.Text.Internal.Lazy.Text)
                                    Data.ByteString.Lazy.Internal.ByteString,
                                  Web.Scotty.Internal.Types.ScottyResponse)>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild2 { (,) a2 s'1 ->
                      case a2 of wild3 {
                        Data.Either.Left e1
                        -> (# ipv2,
                              (Data.Either.Left
                                 @ (Web.Scotty.Internal.Types.ActionError
                                      Data.Text.Internal.Lazy.Text)
                                 @ ()
                                 e1,
                               s'1) #)
                        Data.Either.Right x1
                        -> case (((Web.Scotty.Internal.Types.$w$cliftIO
                                     @ Data.Text.Internal.Lazy.Text
                                     @ GHC.Types.IO
                                     Control.Monad.IO.Class.$fMonadIOIO
                                     @ BoardModel.NPResponse
                                     (Helper.handleNP1 x x1)
                                       `cast`
                                     (Sym (GHC.Types.N:IO[0] <BoardModel.NPResponse>_R)))
                                    `cast`
                                  (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Web.Scotty.Internal.Types.ActionEnv>_R
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                       <Data.Either.Either
                                          (Web.Scotty.Internal.Types.ActionError
                                             Data.Text.Internal.Lazy.Text)
                                          BoardModel.NPResponse>_N)
                                    w4)
                                   `cast`
                                 (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                      <Web.Scotty.Internal.Types.ScottyResponse>_N
                                      <GHC.Types.IO>_R
                                      <Data.Either.Either
                                         (Web.Scotty.Internal.Types.ActionError
                                            Data.Text.Internal.Lazy.Text)
                                         BoardModel.NPResponse>_N)
                                   s'1)
                                  `cast`
                                (GHC.Types.N:IO[0]
                                     <(Data.Either.Either
                                         (Web.Scotty.Internal.Types.ActionError
                                            Data.Text.Internal.Lazy.Text)
                                         BoardModel.NPResponse,
                                       Web.Scotty.Internal.Types.ScottyResponse)>_R)
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           case ipv5 of wild4 { (,) a3 s'2 ->
                           case a3 of wild5 {
                             Data.Either.Left e1
                             -> (# ipv4,
                                   (Data.Either.Left
                                      @ (Web.Scotty.Internal.Types.ActionError
                                           Data.Text.Internal.Lazy.Text)
                                      @ ()
                                      e1,
                                    s'2) #)
                             Data.Either.Right x2
                             -> case (((Web.Scotty.Internal.Types.$w$cliftIO
                                          @ Data.Text.Internal.Lazy.Text
                                          @ GHC.Types.IO
                                          Control.Monad.IO.Class.$fMonadIOIO
                                          @ ()
                                          (\ (eta2 :: GHC.Prim.State#
                                                        GHC.Prim.RealWorld)[OneShot] ->
                                           GHC.IO.Handle.Text.hPutStr2
                                             GHC.IO.Handle.FD.stdout
                                             (BoardModel.$fShowNPResponse_$cshow x2)
                                             GHC.Types.True
                                             eta2)
                                            `cast`
                                          (Sym (GHC.Types.N:IO[0] <()>_R)))
                                         `cast`
                                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                                            <*>_N
                                            <Web.Scotty.Internal.Types.ActionEnv>_R
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Web.Scotty.Internal.Types.ScottyResponse
                                               GHC.Types.IO>_R
                                            <Data.Either.Either
                                               (Web.Scotty.Internal.Types.ActionError
                                                  Data.Text.Internal.Lazy.Text)
                                               ()>_N)
                                         w4)
                                        `cast`
                                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                           <Web.Scotty.Internal.Types.ScottyResponse>_N
                                           <GHC.Types.IO>_R
                                           <Data.Either.Either
                                              (Web.Scotty.Internal.Types.ActionError
                                                 Data.Text.Internal.Lazy.Text)
                                              ()>_N)
                                        s'2)
                                       `cast`
                                     (GHC.Types.N:IO[0]
                                          <(Data.Either.Either
                                              (Web.Scotty.Internal.Types.ActionError
                                                 Data.Text.Internal.Lazy.Text)
                                              (),
                                            Web.Scotty.Internal.Types.ScottyResponse)>_R)
                                       ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                                case ipv7 of wild6 { (,) a4 s'3 ->
                                case a4 of wild7 {
                                  Data.Either.Left e1 -> ds4
                                  Data.Either.Right x3
                                  -> (((Web.Scotty.Action.$wjson
                                          @ BoardModel.NPResponse
                                          @ Data.Text.Internal.Lazy.Text
                                          @ GHC.Types.IO
                                          BoardModel.$fToJSONNPResponse
                                          GHC.Base.$fMonadIO
                                          x2)
                                         `cast`
                                       (Trans
                                            (Web.Scotty.Internal.Types.N:ActionT[0]
                                                 <Data.Text.Internal.Lazy.Text>_N
                                                 <GHC.Types.IO>_R <()>_N)
                                            (Trans
                                                 (Control.Monad.Trans.Except.N:ExceptT[0]
                                                      <Web.Scotty.Internal.Types.ActionError
                                                         Data.Text.Internal.Lazy.Text>_N
                                                      <Control.Monad.Trans.Reader.ReaderT
                                                         Web.Scotty.Internal.Types.ActionEnv
                                                         (Control.Monad.Trans.State.Lazy.StateT
                                                            Web.Scotty.Internal.Types.ScottyResponse
                                                            GHC.Types.IO)>_R
                                                      <()>_N)
                                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                      <*>_N
                                                      <Web.Scotty.Internal.Types.ActionEnv>_R
                                                      <Control.Monad.Trans.State.Lazy.StateT
                                                         Web.Scotty.Internal.Types.ScottyResponse
                                                         GHC.Types.IO>_R
                                                      <Data.Either.Either
                                                         (Web.Scotty.Internal.Types.ActionError
                                                            Data.Text.Internal.Lazy.Text)
                                                         ()>_N)))
                                         w4)
                                        `cast`
                                      (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                           <Web.Scotty.Internal.Types.ScottyResponse>_N
                                           <GHC.Types.IO>_R
                                           <Data.Either.Either
                                              (Web.Scotty.Internal.Types.ActionError
                                                 Data.Text.Internal.Lazy.Text)
                                              ()>_N)
                                        s'3)
                                       `cast`
                                     (GHC.Types.N:IO[0]
                                          <(Data.Either.Either
                                              (Web.Scotty.Internal.Types.ActionError
                                                 Data.Text.Internal.Lazy.Text)
                                              (),
                                            Web.Scotty.Internal.Types.ScottyResponse)>_R)
                                       ipv6 } } } } } } } } } } } }) -}
a438aaab3ae0d2c6ca9c872a8b8e66c0
  startApp3 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture App.startApp4) -}
0252c811ec23c0ea8ca8521bec68a29a
  startApp4 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        App.startApp5 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
28d5040c6b29c0798956e485a6acdc9d
  startApp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "/solve/number_place"#) -}
86ea5e37d139f08724682efb269d9d50
  startApp6 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1,
     Unfolding: (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 let {
                   m1 :: Control.Monad.Trans.State.Lazy.StateT
                           Web.Scotty.Internal.Types.ScottyResponse
                           GHC.Types.IO
                           (Data.Either.Either
                              (Web.Scotty.Internal.Types.ActionError
                                 Data.Text.Internal.Lazy.Text)
                              BoardModel.NumberPlaces)
                   = App.startApp7
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Web.Scotty.Internal.Types.ActionEnv>_R
                          <Control.Monad.Trans.State.Lazy.StateT
                             Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                          <Data.Either.Either
                             (Web.Scotty.Internal.Types.ActionError
                                Data.Text.Internal.Lazy.Text)
                             BoardModel.NumberPlaces>_N)
                       w4
                 } in
                 (\ (s1 :: Web.Scotty.Internal.Types.ScottyResponse)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (m1
                          `cast`
                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                             <GHC.Types.IO>_R
                             <Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                BoardModel.NumberPlaces>_N)
                          s1)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                BoardModel.NumberPlaces,
                              Web.Scotty.Internal.Types.ScottyResponse)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  case ipv1 of wild { (,) a1 s' ->
                  case a1 of wild1 {
                    Data.Either.Left e1
                    -> (# ipv,
                          (Data.Either.Left
                             @ (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                             @ ()
                             e1,
                           s') #)
                    Data.Either.Right x
                    -> (((Web.Scotty.Action.$wjson
                            @ BoardModel.NumberPlaces
                            @ Data.Text.Internal.Lazy.Text
                            @ GHC.Types.IO
                            BoardModel.$fToJSONNumberPlaces
                            GHC.Base.$fMonadIO
                            x)
                           `cast`
                         (Trans
                              (Web.Scotty.Internal.Types.N:ActionT[0]
                                   <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_R <()>_N)
                              (Trans
                                   (Control.Monad.Trans.Except.N:ExceptT[0]
                                        <Web.Scotty.Internal.Types.ActionError
                                           Data.Text.Internal.Lazy.Text>_N
                                        <Control.Monad.Trans.Reader.ReaderT
                                           Web.Scotty.Internal.Types.ActionEnv
                                           (Control.Monad.Trans.State.Lazy.StateT
                                              Web.Scotty.Internal.Types.ScottyResponse
                                              GHC.Types.IO)>_R
                                        <()>_N)
                                   (Control.Monad.Trans.Reader.N:ReaderT[0]
                                        <*>_N
                                        <Web.Scotty.Internal.Types.ActionEnv>_R
                                        <Control.Monad.Trans.State.Lazy.StateT
                                           Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                        <Data.Either.Either
                                           (Web.Scotty.Internal.Types.ActionError
                                              Data.Text.Internal.Lazy.Text)
                                           ()>_N)))
                           w4)
                          `cast`
                        (Control.Monad.Trans.State.Lazy.N:StateT[0]
                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                             <GHC.Types.IO>_R
                             <Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                ()>_N)
                          s')
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Data.Either.Either
                                (Web.Scotty.Internal.Types.ActionError
                                   Data.Text.Internal.Lazy.Text)
                                (),
                              Web.Scotty.Internal.Types.ScottyResponse)>_R)
                         ipv } } })
                   `cast`
                 (Trans
                      (<Web.Scotty.Internal.Types.ScottyResponse>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Data.Either.Either
                                         (Web.Scotty.Internal.Types.ActionError
                                            Data.Text.Internal.Lazy.Text)
                                         (),
                                       Web.Scotty.Internal.Types.ScottyResponse)>_R))
                      (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                <Web.Scotty.Internal.Types.ScottyResponse>_N
                                <GHC.Types.IO>_R
                                <Data.Either.Either
                                   (Web.Scotty.Internal.Types.ActionError
                                      Data.Text.Internal.Lazy.Text)
                                   ()>_N)))) -}
bf12a3dbc74d43caeb96fc4742ff9cd0
  startApp7 ::
    Control.Monad.Trans.Reader.ReaderT
      Web.Scotty.Internal.Types.ActionEnv
      (Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO)
      (Data.Either.Either
         (Web.Scotty.Internal.Types.ActionError
            Data.Text.Internal.Lazy.Text)
         BoardModel.NumberPlaces)
  {- Unfolding: (Web.Scotty.Internal.Types.$w$cliftIO
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   @ BoardModel.NumberPlaces
                   Helper.getAllNp1
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <BoardModel.NumberPlaces>_R))) -}
7bbdac87023810ee8c500dcb56d29847
  startApp8 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture App.startApp9) -}
ad99cb473df741e94989e9d0db11b170
  startApp9 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        App.startApp10 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
3ec78059578ace813f78cf912a8421ef
  startApp_w2 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text GHC.Types.IO GHC.Base.String
  {- Unfolding: (Web.Scotty.Action.param
                   @ GHC.Base.String
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   App.$s$fParsable[]
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   GHC.Base.$fMonadIO
                   App.startApp12) -}
"SPEC/App $fParsable[] @ Char" [ALWAYS] forall ($dParsable :: Web.Scotty.Action.Parsable
                                                                GHC.Types.Char)
  Web.Scotty.Action.$fParsable[] @ GHC.Types.Char $dParsable
  = App.$s$fParsable[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

